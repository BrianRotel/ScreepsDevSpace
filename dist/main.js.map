{"version":3,"file":"main.js","sources":["../src/3rd/screeps-profiler.js","../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/mapping-list.js","../node_modules/source-map/lib/source-map-generator.js","../node_modules/source-map/lib/binary-search.js","../node_modules/source-map/lib/quick-sort.js","../node_modules/source-map/lib/source-map-consumer.js","../node_modules/source-map/lib/source-node.js","../node_modules/source-map/source-map.js","../src/modules/errorMapper.js","../src/3rd/JS_Layout/build_Layout_v1.1.js","../src/3rd/JS_Layout/RoomArray.ts","../src/3rd/JS_Layout/63_good.js","../src/main.ts"],"sourcesContent":["'use strict';\n\nlet usedOnStart = 0;\nlet enabled = false;\nlet depth = 0;\nlet parentFn = '(tick)';\n\nclass ProfilerError extends Error {}\n\n// Hack to ensure the InterShardMemory constant exists in sim\ntry {\n  // eslint-disable-next-line no-unused-expressions\n  InterShardMemory;\n} catch (e) {\n  global.InterShardMemory = undefined;\n}\n\nfunction setupProfiler() {\n  depth = 0; // reset depth, this needs to be done each tick.\n  parentFn = '(tick)';\n  Game.profiler = {\n    stream(duration, filter) {\n      setupMemory('stream', duration || 10, filter);\n    },\n    email(duration, filter) {\n      setupMemory('email', duration || 100, filter);\n    },\n    profile(duration, filter) {\n      setupMemory('profile', duration || 100, filter);\n    },\n    background(filter) {\n      setupMemory('background', false, filter);\n    },\n    callgrind(duration, filter) {\n      setupMemory('callgrind', duration || 100, filter);\n    },\n    restart() {\n      if (Profiler.isProfiling()) {\n        const filter = Memory.profiler.filter;\n        let duration = false;\n        if (!!Memory.profiler.disableTick) {\n          // Calculate the original duration, profile is enabled on the tick after the first call,\n          // so add 1.\n          duration = Memory.profiler.disableTick - Memory.profiler.enabledTick + 1;\n        }\n        const type = Memory.profiler.type;\n        setupMemory(type, duration, filter);\n      }\n    },\n    reset: resetMemory,\n    output: Profiler.output,\n    downloadCallgrind: Profiler.downloadCallgrind,\n  };\n\n  overloadCPUCalc();\n}\n\nfunction setupMemory(profileType, duration, filter) {\n  resetMemory();\n  const disableTick = Number.isInteger(duration) ? Game.time + duration : false;\n  if (!Memory.profiler) {\n    Memory.profiler = {\n      map: {},\n      totalTime: 0,\n      enabledTick: Game.time + 1,\n      disableTick,\n      type: profileType,\n      filter,\n    };\n  }\n  console.log(`Profiling type ${profileType} started at ${Game.time + 1} for ${duration} ticks`);\n}\n\nfunction resetMemory() {\n  Memory.profiler = null;\n}\n\nfunction overloadCPUCalc() {\n  if (Game.rooms.sim) {\n    usedOnStart = 0; // This needs to be reset, but only in the sim.\n    Game.cpu.getUsed = function getUsed() {\n      return performance.now() - usedOnStart;\n    };\n  }\n}\n\nfunction getFilter() {\n  return Memory.profiler.filter;\n}\n\nconst functionBlackList = [\n  'getUsed', // Let's avoid wrapping this... may lead to recursion issues and should be inexpensive.\n  'constructor', // es6 class constructors need to be called with `new`\n];\n\nconst commonProperties = ['length', 'name', 'arguments', 'caller', 'prototype'];\n\nfunction wrapFunction(name, originalFunction) {\n  // wrappedFunction.__profiler = Profiler;\n\n  if (originalFunction.__profiler) {\n    // eslint-disable-next-line no-param-reassign\n    originalFunction.__profiler = Profiler;\n    return originalFunction;\n  }\n\n  function wrappedFunction() {\n    const profiler = wrappedFunction.__profiler;\n    if (profiler.isProfiling()) {\n      const nameMatchesFilter = name === getFilter();\n      const start = Game.cpu.getUsed();\n      if (nameMatchesFilter) {\n        depth++;\n      }\n      const curParent = parentFn;\n      parentFn = name;\n      let result;\n      if (this && this.constructor === wrappedFunction) {\n        // eslint-disable-next-line new-cap\n        result = new originalFunction(...arguments);\n      } else {\n        result = originalFunction.apply(this, arguments);\n      }\n      parentFn = curParent;\n      if (depth > 0 || !getFilter()) {\n        const end = Game.cpu.getUsed();\n        profiler.record(name, end - start, parentFn);\n      }\n      if (nameMatchesFilter) {\n        depth--;\n      }\n      return result;\n    }\n\n    if (this && this.constructor === wrappedFunction) {\n      // eslint-disable-next-line new-cap\n      return new originalFunction(...arguments);\n    }\n    return originalFunction.apply(this, arguments);\n  }\n\n  wrappedFunction.__profiler = Profiler;\n  wrappedFunction.toString = () =>\n    `// screeps-profiler wrapped function:\\n${originalFunction.toString()}`;\n\n  Object.getOwnPropertyNames(originalFunction).forEach(property => {\n    if (!commonProperties.includes(property)) {\n      wrappedFunction[property] = originalFunction[property];\n    }\n  });\n\n  return wrappedFunction;\n}\n\nfunction hookUpPrototypes() {\n  for (const { name, val } of Profiler.prototypes) {\n    if (!val) {\n      console.log(`skipping prototype hook ${name}, object appears to be missing`);\n      continue;\n    }\n    profileObjectFunctions(val, name);\n  }\n}\n\nfunction profileObjectFunctions(object, label) {\n  if (!object || !(typeof object === 'object' || typeof object === 'function')) {\n    throw new ProfilerError(`Asked to profile non-object ${object} for ${label}\n     (${typeof object})`);\n  }\n\n  if (object.prototype) {\n    profileObjectFunctions(object.prototype, label);\n  }\n  const objectToWrap = object;\n\n  Object.getOwnPropertyNames(objectToWrap).forEach(functionName => {\n    const extendedLabel = `${label}.${functionName}`;\n\n    const isBlackListed = functionBlackList.indexOf(functionName) !== -1;\n    if (isBlackListed) {\n      return;\n    }\n\n    const descriptor = Object.getOwnPropertyDescriptor(objectToWrap, functionName);\n    if (!descriptor) {\n      return;\n    }\n\n    const hasAccessor = descriptor.get || descriptor.set;\n    if (hasAccessor) {\n      const configurable = descriptor.configurable;\n      if (!configurable) {\n        return;\n      }\n\n      const profileDescriptor = {};\n\n      if (descriptor.get) {\n        const extendedLabelGet = `${extendedLabel}:get`;\n        profileDescriptor.get = profileFunction(descriptor.get, extendedLabelGet);\n      }\n\n      if (descriptor.set) {\n        const extendedLabelSet = `${extendedLabel}:set`;\n        profileDescriptor.set = profileFunction(descriptor.set, extendedLabelSet);\n      }\n\n      Object.defineProperty(objectToWrap, functionName, profileDescriptor);\n      return;\n    }\n\n    const isFunction = typeof descriptor.value === 'function';\n    if (!isFunction || !descriptor.writable) {\n      return;\n    }\n    const originalFunction = objectToWrap[functionName];\n    objectToWrap[functionName] = profileFunction(originalFunction, extendedLabel);\n  });\n\n  return objectToWrap;\n}\n\nfunction profileFunction(fn, functionName) {\n  const fnName = functionName || fn.name;\n  if (!fnName) {\n    console.log('Couldn\\'t find a function name for - ', fn);\n    console.log('Will not profile this function.');\n    return fn;\n  }\n\n  return wrapFunction(fnName, fn);\n}\n\nconst Profiler = {\n  printProfile() {\n    console.log(Profiler.output());\n  },\n\n  emailProfile() {\n    Game.notify(Profiler.output(1000));\n  },\n\n  downloadCallgrind() {\n    const id = `id${Math.random()}`;\n    const shardId = Game.shard.name + (Game.shard.ptr ? '-ptr' : '');\n    const filename = `callgrind.${shardId}.${Game.time}`;\n    const data = Profiler.callgrind();\n    if (!data) {\n      console.log('No profile data to download');\n      return;\n    }\n    /* eslint-disable */\n    const download = `\n    <script>\n    var element = document.getElementById('${id}');\n    if (!element) {\n      element = document.createElement('a');\n      element.setAttribute('id', '${id}');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,${encodeURIComponent(data)}');\n      element.setAttribute('download', '${filename}');\n\n      element.style.display = 'none';\n      document.body.appendChild(element);\n\n      element.click();\n    }\n    </script>\n    `;\n    /* eslint-enable */\n    console.log(\n      download\n      .split('\\n')\n      .map((s) => s.trim())\n      .join('')\n    );\n  },\n\n  callgrind() {\n    if (!Memory.profiler || !Memory.profiler.enabledTick) return null;\n    const elapsedTicks = Game.time - Memory.profiler.enabledTick + 1;\n    Profiler.checkMapItem('(tick)');\n    Memory.profiler.map['(tick)'].calls = elapsedTicks;\n    Memory.profiler.map['(tick)'].time = Memory.profiler.totalTime;\n    Profiler.checkMapItem('(root)');\n    Memory.profiler.map['(root)'].calls = 1;\n    Memory.profiler.map['(root)'].time = Memory.profiler.totalTime;\n    Profiler.checkMapItem('(tick)', Memory.profiler.map['(root)'].subs);\n    Memory.profiler.map['(root)'].subs['(tick)'].calls = elapsedTicks;\n    Memory.profiler.map['(root)'].subs['(tick)'].time = Memory.profiler.totalTime;\n    let body = `events: ns\\nsummary: ${Math.round(\n      Memory.profiler.totalTime * 1000000\n      )}\\n`;\n    for (const fnName of Object.keys(Memory.profiler.map)) {\n      const fn = Memory.profiler.map[fnName];\n      let callsBody = '';\n      let callsTime = 0;\n      for (const callName of Object.keys(fn.subs)) {\n        const call = fn.subs[callName];\n        const ns = Math.round(call.time * 1000000);\n        callsBody += `cfn=${callName}\\ncalls=${call.calls} 1\\n1 ${ns}\\n`;\n        callsTime += call.time;\n      }\n      body += `\\nfn=${fnName}\\n1 ${Math.round(\n        (fn.time - callsTime) * 1000000\n        )}\\n${callsBody}`;\n    }\n    return body;\n  },\n\n  output(passedOutputLengthLimit) {\n    const outputLengthLimit = passedOutputLengthLimit || 1000;\n    if (!Memory.profiler || !Memory.profiler.enabledTick) {\n      return 'Profiler not active.';\n    }\n\n    const endTick = Math.min(Memory.profiler.disableTick || Game.time, Game.time);\n    const startTick = Memory.profiler.enabledTick;\n    const elapsedTicks = endTick - startTick + 1;\n    const header = 'calls\\t\\ttime\\t\\tavg\\t\\tfunction';\n    const footer = [\n      `Avg: ${(Memory.profiler.totalTime / elapsedTicks).toFixed(2)}`,\n      `Total: ${Memory.profiler.totalTime.toFixed(2)}`,\n      `Ticks: ${elapsedTicks}`,\n    ].join('\\t');\n\n    const lines = [header];\n    let currentLength = header.length + 1 + footer.length;\n    const allLines = Profiler.lines();\n    let done = false;\n    while (!done && allLines.length) {\n      const line = allLines.shift();\n      // each line added adds the line length plus a new line character.\n      if (currentLength + line.length + 1 < outputLengthLimit) {\n        lines.push(line);\n        currentLength += line.length + 1;\n      } else {\n        done = true;\n      }\n    }\n    lines.push(footer);\n    return lines.join('\\n');\n  },\n\n  lines() {\n    const stats = Object.keys(Memory.profiler.map).map(functionName => {\n      const functionCalls = Memory.profiler.map[functionName];\n      return {\n        name: functionName,\n        calls: functionCalls.calls,\n        totalTime: functionCalls.time,\n        averageTime: functionCalls.time / functionCalls.calls,\n      };\n    }).sort((val1, val2) => {\n      return val2.totalTime - val1.totalTime;\n    });\n\n    const lines = stats.map(data => {\n      return [\n        data.calls,\n        data.totalTime.toFixed(1),\n        data.averageTime.toFixed(3),\n        data.name,\n      ].join('\\t\\t');\n    });\n\n    return lines;\n  },\n\n  prototypes: [\n    { name: 'ConstructionSite', val: ConstructionSite },\n    { name: 'Creep', val: Creep },\n    { name: 'Deposit', val: Deposit },\n    { name: 'Flag', val: Flag },\n    { name: 'Game', val: Game },\n    { name: 'InterShardMemory', val: InterShardMemory },\n    { name: 'Mineral', val: Mineral },\n    { name: 'Nuke', val: Nuke },\n    { name: 'OwnedStructure', val: OwnedStructure },\n    { name: 'PathFinder', val: PathFinder },\n    { name: 'PowerCreep', val: PowerCreep },\n    { name: 'RawMemory', val: RawMemory },\n    { name: 'Resource', val: Resource },\n    { name: 'Room', val: Room },\n    { name: 'RoomObject', val: RoomObject },\n    { name: 'RoomPosition', val: RoomPosition },\n    { name: 'RoomVisual', val: RoomVisual },\n    { name: 'Ruin', val: Ruin },\n    { name: 'Source', val: Source },\n    { name: 'Store', val: Store },\n    { name: 'Structure', val: Structure },\n    { name: 'StructureContainer', val: StructureContainer },\n    { name: 'StructureController', val: StructureController },\n    { name: 'StructureExtension', val: StructureExtension },\n    { name: 'StructureExtractor', val: StructureExtractor },\n    { name: 'StructureFactory', val: StructureFactory },\n    { name: 'StructureInvaderCore', val: StructureInvaderCore },\n    { name: 'StructureKeeperLair', val: StructureKeeperLair },\n    { name: 'StructureLab', val: StructureLab },\n    { name: 'StructureLink', val: StructureLink },\n    { name: 'StructureNuker', val: StructureNuker },\n    { name: 'StructureObserver', val: StructureObserver },\n    { name: 'StructurePortal', val: StructurePortal },\n    { name: 'StructurePowerBank', val: StructurePowerBank },\n    { name: 'StructurePowerSpawn', val: StructurePowerSpawn },\n    { name: 'StructureRampart', val: StructureRampart },\n    { name: 'StructureRoad', val: StructureRoad },\n    { name: 'StructureSpawn', val: StructureSpawn },\n    { name: 'StructureStorage', val: StructureStorage },\n    { name: 'StructureTerminal', val: StructureTerminal },\n    { name: 'StructureTower', val: StructureTower },\n    { name: 'StructureWall', val: StructureWall },\n    { name: 'Tombstone', val: Tombstone },\n  ],\n\n  checkMapItem(functionName, map = Memory.profiler.map) {\n    if (!map[functionName]) {\n      // eslint-disable-next-line no-param-reassign\n      map[functionName] = {\n        time: 0,\n        calls: 0,\n        subs: {},\n      };\n    }\n  },\n\n  record(functionName, time, parent) {\n    this.checkMapItem(functionName);\n    Memory.profiler.map[functionName].calls++;\n    Memory.profiler.map[functionName].time += time;\n    if (parent) {\n      this.checkMapItem(parent);\n      this.checkMapItem(functionName, Memory.profiler.map[parent].subs);\n      Memory.profiler.map[parent].subs[functionName].calls++;\n      Memory.profiler.map[parent].subs[functionName].time += time;\n    }\n  },\n\n  endTick() {\n    if (Game.time >= Memory.profiler.enabledTick) {\n      const cpuUsed = Game.cpu.getUsed();\n      Memory.profiler.totalTime += cpuUsed;\n      Profiler.report();\n    }\n  },\n\n  report() {\n    if (Profiler.shouldPrint()) {\n      Profiler.printProfile();\n    } else if (Profiler.shouldEmail()) {\n      Profiler.emailProfile();\n    } else if (Profiler.shouldCallgrind()) {\n      Profiler.downloadCallgrind();\n    }\n  },\n\n  isProfiling() {\n    if (!enabled || !Memory.profiler) {\n      return false;\n    }\n    return !Memory.profiler.disableTick || Game.time <= Memory.profiler.disableTick;\n  },\n\n  type() {\n    return Memory.profiler.type;\n  },\n\n  shouldPrint() {\n    const streaming = Profiler.type() === 'stream';\n    const profiling = Profiler.type() === 'profile';\n    const onEndingTick = Memory.profiler.disableTick === Game.time;\n    return streaming || (profiling && onEndingTick);\n  },\n\n  shouldEmail() {\n    return Profiler.type() === 'email' && Memory.profiler.disableTick === Game.time;\n  },\n\n  shouldCallgrind() {\n    return (\n      Profiler.type() === 'callgrind' &&\n      Memory.profiler.disableTick === Game.time\n    );\n  },\n};\n\nmodule.exports = {\n  wrap(callback) {\n    if (enabled) {\n      setupProfiler();\n    }\n\n    if (Profiler.isProfiling()) {\n      usedOnStart = Game.cpu.getUsed();\n\n      // Commented lines are part of an on going experiment to keep the profiler\n      // performant, and measure certain types of overhead.\n\n      // var callbackStart = Game.cpu.getUsed();\n      const returnVal = callback();\n      // var callbackEnd = Game.cpu.getUsed();\n      Profiler.endTick();\n      // var end = Game.cpu.getUsed();\n\n      // var profilerTime = (end - start) - (callbackEnd - callbackStart);\n      // var callbackTime = callbackEnd - callbackStart;\n      // var unaccounted = end - profilerTime - callbackTime;\n      // console.log('total-', end, 'profiler-', profilerTime, 'callbacktime-',\n      // callbackTime, 'start-', start, 'unaccounted', unaccounted);\n      return returnVal;\n    }\n\n    return callback();\n  },\n\n  enable() {\n    enabled = true;\n    hookUpPrototypes();\n  },\n\n  output: Profiler.output,\n  callgrind: Profiler.callgrind,\n\n  registerObject: profileObjectFunctions,\n  registerFN: profileFunction,\n  registerClass: profileObjectFunctions,\n\n  Error: ProfilerError,\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/**\n * 校正异常的堆栈信息\n *\n * 由于 rollup 会打包所有代码到一个文件，所以异常的调用栈定位和源码的位置是不同的\n * 本模块就是用来将异常的调用栈映射至源代码位置\n *\n * @see https://github.com/screepers/screeps-typescript-starter/blob/master/src/utils/ErrorMapper.ts\n */\n\nimport { SourceMapConsumer } from 'source-map'\n\n// 缓存 SourceMap\nlet consumer = null\n\n// 第一次报错时创建 sourceMap\nconst getConsumer = function () {\n    if (consumer == null) consumer = new SourceMapConsumer(require(\"main.js.map\"))\n    return consumer\n}\n\n// 缓存映射关系以提高性能\nconst cache = {}\n\n/**\n * 使用源映射生成堆栈跟踪，并生成原始标志位\n * 警告 - global 重置之后的首次调用会产生很高的 cpu 消耗 (> 30 CPU)\n * 之后的每次调用会产生较低的 cpu 消耗 (~ 0.1 CPU / 次)\n *\n * @param {Error | string} error 错误或原始追踪栈\n * @returns {string} 映射之后的源代码追踪栈\n */\nconst sourceMappedStackTrace = function (error) {\n    const stack = error instanceof Error ? error.stack : error\n    // 有缓存直接用\n    if (cache.hasOwnProperty(stack)) return cache[stack]\n\n    const re = /^\\s+at\\s+(.+?\\s+)?\\(?([0-z._\\-\\\\\\/]+):(\\d+):(\\d+)\\)?$/gm\n    let match\n    let outStack = error.toString()\n    console.log(\"ErrorMapper -> sourceMappedStackTrace -> outStack\", outStack)\n\n    while ((match = re.exec(stack))) {\n        // 解析完成\n        if (match[2] !== \"main\") break\n\n        // 获取追踪定位\n        const pos = getConsumer().originalPositionFor({\n            column: parseInt(match[4], 10),\n            line: parseInt(match[3], 10)\n        })\n\n        // 无法定位\n        if (!pos.line) break\n\n        // 解析追踪栈\n        if (pos.name) outStack += `\\n    at ${pos.name} (${pos.source}:${pos.line}:${pos.column})`\n        else {\n            // 源文件没找到对应文件名，采用原始追踪名\n            if (match[1]) outStack += `\\n    at ${match[1]} (${pos.source}:${pos.line}:${pos.column})`\n            // 源文件没找到对应文件名并且原始追踪栈里也没有，直接省略\n            else outStack += `\\n    at ${pos.source}:${pos.line}:${pos.column}`\n        }\n    }\n\n    cache[stack] = outStack\n    return outStack\n}\n\n/**\n * 错误追踪包装器\n * 用于把报错信息通过 source-map 解析成源代码的错误位置\n * 和原本 wrapLoop 的区别是，wrapLoop 会返回一个新函数，而这个会直接执行\n *\n * @param next 玩家代码\n */\nexport const errorMapper = function (next) {\n    return () => {\n        try {\n            // 执行玩家代码\n            next()\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                // 渲染报错调用栈，沙盒模式用不了这个\n                const errorMessage = Game.rooms.sim ?\n                    `沙盒模式无法使用 source-map - 显示原始追踪栈<br>${_.escape(e.stack)}` :\n                    `${_.escape(sourceMappedStackTrace(e))}`\n\n                console.log(`<text style=\"color:#ef9a9a\">${errorMessage}</text>`)\n            }\n            // 处理不了，直接抛出\n            else throw e\n        }\n    }\n}\n","/********************************\nauthor：ChenyangDu\nversion:1.1\n\n自动布局\n【功能】：选定中心位置，自动规划房内布局\n【使用方法】：不必获取视野，传入中心点和房间内的控制器、字母矿、能量矿的位置即可（推荐插旗）\n1、放置5个旗子，分别对应房间的中心位置(center)、房间的控制器(pc)、\n    房间的字母矿(pm)、房间的能量矿(pa、[pb])，pb没有就不放\n2、运行以下代码即可\n\nlet center = Game.flags.center; // 房间中心的位置\nlet pa = Game.flags.pa;\nlet pb = Game.flags.pb;\nlet pc = Game.flags.pc;\nlet pm = Game.flags.pm;\nif(center) {\n    let points = [pc.pos,pm.pos,pa.pos]\n    if(pb)points.push(pb.pos)\n    require('./建筑规划').run(center.pos,points)\n}\n\n【返回结果】:\n// 所有位置都用[x,y]表示\n{\n    structMap, //一个字典，key是建筑名称，val是建筑位置的数组\n    roadLength, //一个数组，不同等级路的长度，第0个元素是0\n    containers, //一个位置数组，对应[pc,pm,pa,pb]所对应的container\n    links, //一个位置数组，对应[pa,pb,中央link]所对应的link\n}\n\n【说明】:\n1、消耗CPU大概20个左右\n2、控制器的container周围3*3区域默认为upgrader区域，不放置建筑，会尽量避免寻路走这里\n3、lab的位置会优先选择4*4离中心最远的地方（为了防止一颗核弹同时打lab和中心）\n   找不到会选择3*5或者5*3等方案\n4、塔位置是随机选了6个rampart然后找最近的\n5、link在5级的时候会先造中间的link，然后造离得远的那个\n6、中心点尽量往中间选，靠近边界可能出bug\n7、先这样吧。。。。虽然有bug但凑活能用了\n\n********************************/\n\nlet cache = {}\n\nmodule.exports={\n    /**\n     * @param {RoomPosition} centerpos 房间布局的中心位置\n     * @param {RoomPosition[]} points 房间中控制器、字母矿、能量矿的数组\n     * @returns \n     */\n    CalculateLayout(centerpos,points){\n        let name = centerpos.x+'_'+centerpos.y+'_'+centerpos.roomName\n        let ret\n        if(cache[name]){\n            ret = cache[name]\n        }else{\n            cache[name] = ret = autoPlan(centerpos,points)\n        }\n        // 可视化，不看就关了\n\n        // 以下方法可以按等级标记\n        for(let level = 1;level <= 8;level ++){\n            for(let type in CONTROLLER_STRUCTURES){\n                let lim = CONTROLLER_STRUCTURES[type]\n                if(type == 'road')lim = ret.roadLength\n                for(let i = lim[level-1];i<Math.min(ret.structMap[type].length,lim[level]);i++){\n                    let e = ret.structMap[type][i]\n                    new RoomVisual(centerpos.roomName).text(level,e[0]+0.3,e[1]+0.5,{font:0.4,opacity:0.8})\n                }\n                if(type == 'container'){\n                    for(let i = 0;i<ret.containers.length;i++){\n                        let e = ret.containers[i]\n                        if((level == 1 && i != 1) || (level == 6 && i == 1)){\n                            new RoomVisual(centerpos.roomName).text(level,e[0]+0.3,e[1]+0.5,{font:0.4,opacity:0.8})\n                        }\n                    }\n                    \n                }\n            }\n        }\n        // 渲染建筑\n        showRoomStructures(centerpos.roomName,ret.structMap)\n        return ret\n    }\n}\n\n/**\n * \n * @param {RoomPosition} center \n * @param {RoomPosition[]} points 房间中控制器、字母矿、能量矿的数组\n */\nfunction autoPlan(center,points){\n    let cpu = Game.cpu.getUsed();\n    const terrain = new Room.Terrain(center.roomName)\n\n    let part = [\n        // 弃用的一种布局模式，虽然也能凑活用\n        // [1,0,0,0,0,1],\n        // [0,1,0,0,1,0],\n        // [0,0,1,1,0,0],\n        // [0,0,1,1,0,0],\n        // [0,1,0,0,1,0],\n        // [1,0,0,0,0,1],\n        [1,0,0,0],\n        [0,1,0,1],\n        [0,0,1,0],\n        [0,1,0,1],\n    ]\n    let structMap = {}\n    _.keys(CONTROLLER_STRUCTURES).forEach(e=>structMap[e] = [])\n\n    let roomCost = new RoomArray()\n    let centerPath = new RoomArray()\n    let centerPathRoad = new RoomArray()\n    let roadMap = new RoomArray()\n\n    roomCost.initRoomTerrain(center.roomName)\n    centerPath.init()\n    centerPathRoad.init()\n    roadMap.init()\n\n    // 边界不能放\n    roomCost.forBorder((x,y,val)=>{\n        if(terrain.get(x,y) == 0){\n            roomCost.forNear((x,y,val)=>{\n                roomCost.set(x,y,0xff)\n            },x,y,1)\n        }\n    })\n    // 放ramp\n    roomCost.forBorder((x,y,val)=>{\n        if(terrain.get(x,y) == 0){\n            roomCost.forRange((x,y,val)=>{\n                if(val != 0xff){\n                    structMap[STRUCTURE_RAMPART].push([x,y])\n                    roomCost.set(x,y,0xff)\n                }\n            },x,y,2)\n        }\n    })\n    // 边界不能放\n    roomCost.forBorder((x,y,val)=>{\n        if(terrain.get(x,y) == 0){\n            roomCost.forNear((x,y,val)=>{\n                if(val != 0xff){\n                    roomCost.set(x,y,100)\n                }\n            },x,y,4)\n        }\n    })\n\n    // 处理矿点和控制器[控制器、字母矿、矿a、(矿b)]\n    {\n        let costs = new PathFinder.CostMatrix;\n        roomCost.forEach((x,y,val)=>{costs.set(x,y,val)})\n        \n        if(points.length > 0){\n            let max_cnt = 0 // 周围的空地数量\n        \n            let containerPoses = []\n    \n            roomCost.forRange((_x,_y,val)=>{\n                if(val == 0xff)return\n                let pos = new RoomPosition(_x,_y,center.roomName)\n                \n                let cnt = 0\n                roomCost.forNear((x,y,val)=>{\n                    if(val!=0xff){\n                        cnt++\n                    }\n                },pos.x,pos.y)\n                if(cnt > max_cnt){\n                    containerPoses = []\n                    containerPoses.push(pos)\n                    max_cnt = cnt\n                }else if(cnt == max_cnt){\n                    containerPoses.push(pos)\n                }\n                \n            },points[0].x,points[0].y,2)\n            \n            containerPoses.forEach(pos=>{\n                let ret = PathFinder.search(\n                    pos, {pos:center,range:2},\n                    {\n                        roomCallback:()=>costs,\n                        maxRooms:1\n                    }\n                )\n                containerPoses.pathlen = ret.path.length\n            })\n            containerPoses.sort(a=>a.pathlen)\n            let containerPos = _.head(containerPoses)\n            \n            if(containerPos){\n                structMap[STRUCTURE_CONTAINER].push([containerPos.x,containerPos.y])\n                roomCost.set(containerPos.x,containerPos.y,0xff)\n                costs.set(containerPos.x,containerPos.y,0xff)\n                roomCost.forNear((x,y,val)=>{\n                    roomCost.set(x,y,90)\n                    costs.set(x,y,90)\n                },containerPos.x,containerPos.y)\n            }\n        }\n        for(let i=1;i<points.length;i++){\n            let x,y\n            [x,y] = [points[i].x,points[i].y]\n            let ret = PathFinder.search(\n                new RoomPosition(x,y,center.roomName), {pos:center,range:1},\n                {\n                    roomCallback:()=>costs,\n                    maxRooms:1\n                }\n            )\n            let path = ret.path;\n            if(path.length){\n                let pos = path[0]\n                structMap[STRUCTURE_CONTAINER].push([pos.x,pos.y])\n                roomCost.set(pos.x,pos.y,0xff)\n                costs.set(pos.x,pos.y,0xff)\n\n                if(i>1){\n                    let linkPoses = []\n                    roomCost.forNear((x,y,val)=>{\n                        if(val < 0xff)linkPoses.push([x,y])\n                    },pos.x,pos.y)\n                    let linkpos = null\n                    let minRange = 50\n                    linkPoses.forEach(e=>{\n                        let range = getRange(e,[center.x,center.y])\n                        if(range < minRange){\n                            minRange = range\n                            linkpos = e\n                        }\n                        if(range == minRange && e[0]!=pos.x&&e[1]!=pos.y){ // 尽可能对角排列不堵路\n                            linkpos = e\n                        }\n                    })\n                    \n                    if(linkpos){\n                        structMap[STRUCTURE_LINK].push(linkpos)\n                        roomCost.set(linkpos[0],linkpos[1],0xff)\n                        costs.set(linkpos[0],linkpos[1],0xff)\n\n                    }\n                }\n            }else{\n                console.log(\"no path\")\n            }\n            \n        }\n    }\n    \n\n    roadMap.forEach((x,y,val)=>{\n        if(part[(x-center.x+50)%part.length][(y-center.y+50)%part[0].length] == 1 \n        && roomCost.get(x,y) < 90){\n            roadMap.set(x,y,1)\n        }\n    })\n\n    // 计算按目前的路径，距离中心的距离\n    let updateCenterPathRoad = function(x,y,val,onlyroad = true){\n        let _que = [[x,y,val]]\n        centerPathRoad.set(x,y,val)\n        while(_que.length){\n            let top = _que.shift()\n            centerPathRoad.forNear((x,y,val)=>{\n                if((val == 0 || val > top[2]+1) && roomCost.get(x,y) != 0xff &&\n                 (!onlyroad || roadMap.get(x,y)==1)){\n                    _que.push([x,y,top[2]+1])\n                    centerPathRoad.set(x,y,top[2]+1)\n                }\n            },top[0],top[1])\n        }\n    }\n\n    updateCenterPathRoad(center.x,center.y,1)\n\n    let que_border4 = []\n    // 计算按默认地形到达中心点的路程\n    let que = [[center.x,center.y,1]]\n    centerPath.set(center.x,center.y,1)\n    while(que.length){\n        let top = que.shift()\n        let x = top[0]\n        let y = top[1]\n        // 如果默认地形和目前路径计算结果相差太大，或者不可达，就新建路径\n        \n        if(roadMap.get(x,y)==1&&(centerPathRoad.get(x,y)==0||centerPathRoad.get(x,y)-centerPath.get(x,y)>4)){\n            \n            let ret = PathFinder.search(\n                center, new RoomPosition(x,y,center.roomName),\n                {\n                  roomCallback: function(roomName) {\n                    let costs = new PathFinder.CostMatrix;\n                    roomCost.forEach((x,y,val)=>{\n                        if(roadMap.get(x,y) == 1)costs.set(x,y,1)\n                        else costs.set(x,y,val)\n                    })\n                    return costs;\n                  },\n                  maxRooms:1\n                }\n            );\n            ret.path.forEach(pos=>{\n                if(roadMap.get(pos.x,pos.y)==0){\n                    \n                    let minRoadLength = 10000\n                    centerPathRoad.forNear((x,y,val)=>{\n                        if(val > 0 && val < minRoadLength && roadMap.get(x,y)==1){\n                            minRoadLength = val;\n                        }\n                    },pos.x,pos.y)\n                    updateCenterPathRoad(pos.x,pos.y,minRoadLength+1)\n                    roadMap.set(pos.x,pos.y,1)\n                    // new RoomVisual(center.roomName).text(\n                    //     minRoadLength+1,\n                    //     pos,\n                    //     {\n                    //         font:0.4,\n                    //         color:\"#ff0\"\n                    //     }\n                    // )\n                }\n            })\n        }\n        \n        // 如果靠近边界就放入队列，为之后删除多余ramp做准备\n        if(x==5||x==44||y==5||y==44){\n            que_border4.push(top)\n        }\n\n        centerPath.forNear((x,y,val)=>{\n            if(val == 0 && roomCost.get(x,y) < 100){\n                que.push([x,y,top[2]+1])\n                centerPath.set(x,y,top[2]+1)\n            }\n        },x,y)\n    }\n\n    // 删除多余的ramp\n    while(que_border4.length){\n        let top = que_border4.shift()\n        let x = top[0]\n        let y = top[1]\n        centerPath.forNear((x,y,val)=>{\n            if(val == 0 && roomCost.get(x,y) != 0xff){\n                que_border4.push([x,y,top[2]+1])\n                centerPath.set(x,y,top[2]+1)\n            }\n        },x,y)\n    }\n\n    for(let i=0;i<structMap[STRUCTURE_RAMPART].length;i++){\n        let ramp = structMap[STRUCTURE_RAMPART][i]\n        let use = false\n        centerPath.forNear((x,y,val)=>{\n            if( val)use = true\n            // if()\n        },ramp[0],ramp[1])\n        if(!use){\n            structMap[STRUCTURE_RAMPART].splice(i,1)\n            i--;\n        }\n    }\n\n    // roomCost.forEach((x,y,val)=>{\n    //     new RoomVisual(center.roomName).text(\n    //         val,x,y,{\n    //             font:0.5,\n    //             opacity:0.5\n    //         }\n    //     )\n    // })\n\n    centerPathRoad.init()\n    {\n        // 计算哪些点适合放建筑\n        let structCnt = 0;\n        let roadque = [[center.x,center.y,1]]// 路的队列\n        let structque = []// 建筑的队列\n        let visited = new RoomArray()\n        visited.init()\n        // 用两个队列，先处理建筑的，并且建筑一加到队列中，就立即在地图上标记，\n        // 路反过来，等从队列中取出，需要扩展的时候才加入地图\n        centerPathRoad.set(center.x,center.y,1)\n        visited.set(center.x,center.y,1)\n        while((roadque.length || structque.length) && structCnt < 86){\n            let top,x,y;\n            top = structque.length?structque.shift():roadque.shift()\n            x = top[0]\n            y = top[1]\n            \n            if(roadMap.get(x,y) == 1){\n                centerPathRoad.set(x,y,top[2])\n                centerPathRoad.forNear((x,y,val)=>{\n                    if((val == 0 || val > top[2]+1) && roomCost.get(x,y) < 100\n                         && visited.get(x,y) == 0){\n                        if(roadMap.get(x,y) == 1){\n                            roadque.push([x,y,top[2]+1])\n                            visited.set(x,y,1)\n                        }\n                        else{\n                            if(structCnt < 86 && roomCost.get(x,y) < 90){\n                                structque.push([x,y,top[2]+1])\n                                visited.set(x,y,1)\n                                structCnt++\n                                roadMap.set(x,y,2)\n                                centerPathRoad.set(x,y,top[2]+1)\n                            }\n                        }\n                    }\n                },x,y)\n            }\n        }\n    }\n\n    // 删除不挨着的\n    roadMap.forEach((x,y,val)=>{\n        if(centerPathRoad.get(x,y)==0)roadMap.set(x,y,0)\n    })\n    // console.log(Game.cpu.getUsed()-cpu)\n\n    // 处理tower\n    {\n        // 随机选6个ramp，选择最近的建筑，如果距离在20以上就作废\n        let seed = 1\n        while(structMap[STRUCTURE_TOWER].length<6){\n            const len = structMap[STRUCTURE_RAMPART].length\n            let ramp = structMap[STRUCTURE_RAMPART][(547*seed)%len]\n            let towerPos = null\n            let min_range = 50\n            roadMap.forEach((x,y,val)=>{\n                if(val == 2){\n                    let range = getRange(ramp,[x,y])\n                    if(range < min_range){\n                        min_range = range\n                        towerPos = [x,y]\n                    }\n                }\n            })\n            if(towerPos && (min_range < 20 || seed > 20)){\n                structMap[STRUCTURE_TOWER].push(towerPos)\n                roadMap.set(towerPos[0],towerPos[1],3)\n                // new RoomVisual(center.roomName).line(\n                //     towerPos[0],towerPos[1],ramp[0],ramp[1],{\n                //         color:'#f00'\n                //     }\n                // )\n            }\n            seed++\n        }\n    }\n\n    // 处理lab\n    let labCenter = null\n    {\n        let sumExt = new RoomArray()\n        sumExt.init()\n        roadMap.forEach((x,y,val)=>{\n            if(x && y){\n                sumExt.set(x,y,((val===2)?1:0)+sumExt.get(x,y-1)+sumExt.get(x-1,y)-sumExt.get(x-1,y-1))\n            }\n        })\n        let getlab = function(len_x,len_y){\n            let labPos = null\n            let max_range = 0;\n            sumExt.forEach((x,y,val)=>{\n                let xt = x-len_x\n                let yt = y-len_y\n                if(verify(xt,yt) && sumExt.get(x,y) - sumExt.get(xt,y)-sumExt.get(x,yt)+sumExt.get(xt,yt) >=10){\n                    let range = getRange([x-(len_x-1)/2,y-(len_y-1)/2],[center.x,center.y])\n                    if(range > max_range){\n                        max_range = range\n                        labPos = {x,y}\n                    }\n                }\n            })\n            if(labPos){\n                for(let x = labPos.x-len_x+1;x<=labPos.x;x++)\n                for(let y = labPos.y-len_y+1;y<=labPos.y;y++){\n                    if(roadMap.get(x,y)==2){\n                        roadMap.set(x,y,3)\n                        structMap[STRUCTURE_LAB].push([x,y])\n                    }\n                }\n                labCenter = [labPos.x-(len_x-1)/2,labPos.y-(len_y-1)/2]\n                return true\n            }\n            return false\n        }\n        // lab的三种方案，可以证明一定存在两个lab到达其他lab的距离在2以内\n        getlab(4,4)||getlab(3,5)||getlab(5,3)\n        \n    }\n    \n    // 处理nuker observe\n    {\n        let cache = [[0,0,0],[0,0,0]]\n        roadMap.forEach((x,y,val)=>{\n            if(val==2){\n                if(centerPath.get(x,y) > cache[1][2]){\n                    cache[1] = [x,y,centerPath.get(x,y)]\n                }\n                \n                if(cache[1][2] > cache[0][2]){\n                    [cache[0],cache[1]] = [cache[1],cache[0]]\n                }\n            }\n        })\n        structMap[STRUCTURE_OBSERVER].push([cache[0][0],cache[0][1]])\n        structMap[STRUCTURE_NUKER].push([cache[1][0],cache[1][1]])\n        roadMap.set(cache[0][0],cache[0][1],3)\n        roadMap.set(cache[1][0],cache[1][1],3)\n    }\n\n    // 处理中央集群\n    {\n        let structures = ['link','storage','terminal','factory','powerSpawn','spawn','spawn','spawn']\n        let range = 1;\n        while(structures.length){\n            let put = function(incenter){\n                roadMap.forRange((x,y,val)=>{\n                    if(val == 2 && structures.length &&\n                        (!incenter || (x==center.x || y==center.y))){\n                        let type = structures.shift()\n                        structMap[type].push([x,y])\n                        roadMap.set(x,y,3)\n                    }\n                },center.x,center.y,range)\n            }\n            put(true)\n            put(false)\n            \n\n            range++;\n        }\n    }\n\n    // 处理extension\n    structMap['road'] = []\n    structMap[STRUCTURE_EXTENSION] = []\n    roadMap.forEach((x,y,val)=>{\n        if(val == 1)structMap['road'].push([x,y])\n        if(val == 2)structMap[STRUCTURE_EXTENSION].push([x,y])\n    })\n\n    // 记录container、link原来对应的位置\n    let containers = [],links = []\n    structMap['container'].forEach(p=>containers.push(p))\n    structMap['link'].forEach(p=>links.push(p))\n    \n    // 连接矿/控制器\n    {\n        let costs = new PathFinder.CostMatrix;\n        let terrain = new Room.Terrain(center.roomName);\n        roadMap.forEach((x,y,val)=>{\n            let te = terrain.get(x,y)\n            costs.set(x,y,te==TERRAIN_MASK_WALL?255:(te==TERRAIN_MASK_SWAMP?4:2))\n        })\n        for(let struct of OBSTACLE_OBJECT_TYPES){\n            if(structMap[struct]){\n                structMap[struct].forEach(e=>{\n                    costs.set(e[0],e[1],0xff)\n                })\n            }\n        }\n        // 控制器周围的消耗提高\n        if(structMap[\"container\"].length>0){\n            roadMap.forNear((x,y,val)=>{\n                costs.set(x,y,10)\n            },structMap[\"container\"][0][0],structMap[\"container\"][0][1])\n        }\n        \n        structMap[\"road\"].forEach(e=>{\n            costs.set(e[0],e[1],1)\n        })\n        \n        structMap[\"container\"].sort((a,b)=>getRange(a,[center.x,center.y])-getRange(b,[center.x,center.y]))\n        structMap[\"container\"].forEach(e=>{\n            let ret = PathFinder.search(\n                center,\n                {pos:new RoomPosition(e[0],e[1],center.roomName),range:1}, \n                {\n                    roomCallback:()=>{return costs},\n                    maxRooms:1\n                }\n            )\n            let lastCenterLength\n            ret.path.forEach(pos=>{\n                if(costs.get(pos.x,pos.y) != 1){\n                    structMap['road'].push([pos.x,pos.y])\n                    costs.set(pos.x,pos.y,1)\n                }else{\n                    // new RoomVisual(center.roomName).text('D'+centerPathRoad.get(pos.x,pos.y),pos.x,pos.y,{color:'red'})\n                    // updateCenterPathRoad(pos.x,pos.y,centerPathRoad.get(pos.x,pos.y))\n                }\n                if(centerPathRoad.get(pos.x,pos.y) != 0){\n                    lastCenterLength = centerPathRoad.get(pos.x,pos.y)\n                }else{\n                    lastCenterLength ++\n                    centerPathRoad.set(pos.x,pos.y,lastCenterLength)\n                    roadMap.set(pos.x,pos.y,1)\n                }\n            })\n            centerPathRoad.set(e[0],e[1],lastCenterLength+1)\n            roadMap.set(e[0],e[1],2)\n        })\n    }\n\n    \n    // 删除多余的建筑\n    for(let type in structMap){\n        if(type == 'lab'){\n            structMap[type].sort((a,b)=>getRange(a,labCenter)-getRange(b,labCenter))\n        }else if(type == 'link'){\n            structMap[type].sort((a,b)=>getRange(a,[center.x,center.y])-getRange(b,[center.x,center.y]))\n            if(structMap[type].length == 3){\n                [structMap[type][2],structMap[type][1]] = [structMap[type][1],structMap[type][2]]\n            }\n        }else\n        {\n            structMap[type].sort((a,b)=>centerPathRoad.get(a[0],a[1])-centerPathRoad.get(b[0],b[1]))\n        }\n    }\n    let roads = {}\n    for(let level = 8;level > 0;level --){\n        roads[level] = []\n        for(let type in structMap){\n            let length = Math.min(structMap[type].length,CONTROLLER_STRUCTURES[type][level])\n            structMap[type].slice(length).forEach(e=>{\n                roadMap.set(e[0],e[1],0)\n            })\n            \n            // if(level >= Game.time % 8)\n            //     structMap[type] = structMap[type].slice(0,length)\n        }\n        if(level == 5 && containers.length >= 2){ // 删掉miner周围的container\n            roadMap.set(containers[1][0],containers[1][1],0)\n        }\n        for(let i = structMap['road'].length-1;i>=0;i--){\n            let x = structMap['road'][i][0]\n            let y = structMap['road'][i][1]\n            let val = centerPathRoad.get(x,y)\n            // 周围有其他建筑或路径且只能通过本路到达则标记有用\n            let need = false\n            centerPathRoad.forNear((_x,_y,_val)=>{\n                if(!need && _val == val+1 && roadMap.get(_x,_y) > 0){ // 路径或建筑\n                    need = true\n                    centerPathRoad.forNear((__x,__y,__val)=>{\n                        if(need && (__x != x || __y != y) && __val == val \n                        && roadMap.get(__x,__y) == 1)need = false\n                    },_x,_y)\n                }\n            },x,y)\n            if(!need){\n                roadMap.set(x,y,0)\n                let re = structMap['road'].splice(i,1)\n                if(level < 8){\n                    roads[level + 1].push(re[0])\n                }\n            }\n        }\n    }\n    let roadLength = [0,structMap['road'].length]\n    for(let level = 2;level <= 8;level ++){\n        if(roads[level].length)\n            structMap['road'] = structMap['road'].concat(roads[level])\n        roadLength.push(structMap['road'].length)\n        // console.log(roadLength)\n    }\n    \n    // let level = 1;\n    // for(let i = 0;i<structMap['road'].length;i++){\n    //     while(i >= roadLength[level])level ++\n    //     let e = structMap['road'][i]\n    //     new RoomVisual(center.roomName).text(level,e[0],e[1]+0.5,{font:0.5,opacity:0.5})\n    // }\n    \n\n    // console.log(Game.cpu.getUsed()-cpu)\n    return {structMap,roadLength,containers,links};\n\n    // let cnt = {}\n    // roadMap.forEach((x,y,val)=>{\n    //     if(roadMap.get(x,y) == 1){\n    //         let a = centerPathRoad.get(x,y)\n    //         let b = centerPath.get(x,y)\n    //         new RoomVisual(center.roomName).text(\n    //             a,x,y+0.2,\n    //             {\n    //                 font:0.4,\n    //                 color:\"#f00\"\n    //             }\n    //         )\n    //         new RoomVisual(center.roomName).text(\n    //             b,x,y-0.2,\n    //             {\n    //                 font:0.4,\n    //                 color:\"#00f\"\n    //             }\n    //         )\n    //     }else{\n    //         new RoomVisual(center.roomName).text(\n    //             centerPath.get(x,y),x,y,\n    //             {\n    //                 font:0.5,\n    //                 color:val?\"#0ff\":0\n    //             }\n    //         )\n    //     }\n    //     if(!cnt[val])cnt[val] = 0;\n    //     cnt[val]++;\n    // })\n    \n    \n}\n// 可视化\n\nconst structuresShape= {\n    \"spawn\": \"◎\",\n    \"extension\": \"ⓔ\",\n    \"link\": \"◈\",\n    \"road\": \"•\",\n    \"constructedWall\": \"▓\",\n    \"rampart\": \"⊙\",\n    \"storage\": \"▤\",\n    \"tower\": \"🔫\",\n    \"observer\": \"👀\",\n    \"powerSpawn\": \"❂\",\n    \"extractor\": \"⇌\",\n    \"terminal\": \"✡\",\n    \"lab\": \"☢\",\n    \"container\": \"□\",\n    \"nuker\": \"▲\",\n    \"factory\": \"☭\"\n}\nconst structuresColor= {\n    \"spawn\": \"cyan\",\n    \"extension\": \"#0bb118\",\n    \"link\": \"yellow\",\n    \"road\": \"#fa6f6f\",\n    \"constructedWall\": \"#003fff\",\n    \"rampart\": \"#003fff\",\n    \"storage\": \"yellow\",\n    \"tower\": \"cyan\",\n    \"observer\": \"yellow\",\n    \"powerSpawn\": \"cyan\",\n    \"extractor\": \"cyan\",\n    \"terminal\": \"yellow\",\n    \"lab\": \"#d500ff\",\n    \"container\": \"yellow\",\n    \"nuker\": \"cyan\",\n    \"factory\": \"yellow\"\n}\n\nfunction showRoomStructures(roomName,structMap){\n    let roomStructs = new RoomArray().init()\n    const visual = new RoomVisual(roomName);\n    structMap[\"road\"].forEach(e=>roomStructs.set(e[0],e[1],\"road\"))\n    for(let struct in structMap){\n        if(struct==\"road\"){\n            structMap[struct].forEach(e=>{\n                roomStructs.forNear((x,y,val)=>{\n                    if(val ==\"road\"&&((e[0]>=x&&e[1]>=y)||(e[0]>x&&e[1]<y)))visual.line(x,y,e[0],e[1],{color:structuresColor[struct]})\n                },e[0],e[1]);\n                visual.text(structuresShape[struct], e[0],e[1]+0.25, {color: structuresColor[struct],opacity:0.75,fontSize: 7})\n            })\n        }\n        else structMap[struct].forEach(e=>visual.text(structuresShape[struct], e[0],e[1]+0.25, {color: structuresColor[struct],opacity:0.75,fontSize: 7}))\n    }\n}\n\nlet getRange=function(a,b){\n    return Math.max(Math.abs(a[0]-b[0]),Math.abs(a[1]-b[1]))\n}\n\n// 房间数组类\nfunction verify(x,y){\n    return x>=0&&x<50&&y>=0&&y<50\n}\nlet RoomArray_proto= {\n    exec(x,y,val){\n        let tmp = this.arr[x*50+y]\n        this.set(x,y,val);\n        return tmp\n    },\n    get(x,y){\n        return this.arr[x*50+y];\n    },\n    set(x,y,value){\n        this.arr[x*50+y]=value;\n    },\n    init(){\n        if(!this.arr)\n            this.arr = new Array(50*50)\n        for(let i=0;i<2500;i++){\n            this.arr[i]=0;\n        }\n        return this;\n    },\n    forEach(func){\n        for(let y = 0; y < 50; y++) {\n            for(let x = 0; x < 50; x++) {\n                func(x,y,this.get(x,y))\n            }\n        }\n    },\n    for4Direction(func,x,y,range=1){\n        for(let e of [[1,0],[-1,0],[0,1],[0,-1]]){\n            let xt=x+e[0]\n            let yt=y+e[1]\n            if(verify(xt,yt))\n                func(xt,yt,this.get(xt,yt))\n        }\n    },\n    forNear(func,x,y,range=1){\n        for(let i=-range;i<=range;i++){\n            for(let j=-range;j<=range;j++){\n                let xt=x+i\n                let yt=y+j\n                if((i||j)&&verify(xt,yt))\n                    func(xt,yt,this.get(xt,yt))\n            }\n        }\n    },\n    forRange(func,x,y,range=1){\n        let xt,yt\n        for(let i=-range;i<=range;i++){\n            let j = range;\n            xt=x+i\n            yt=y+j\n            if(verify(xt,yt))\n                func(xt,yt,this.get(xt,yt))\n                \n            j = -range;\n            xt=x+i\n            yt=y+j\n            if(verify(xt,yt))\n                func(xt,yt,this.get(xt,yt))\n        }\n        \n        for(let j=-range+1;j<range;j++){\n            let i = range;\n            xt=x+i\n            yt=y+j\n            if(verify(xt,yt))\n                func(xt,yt,this.get(xt,yt))\n                \n            i = -range;\n            xt=x+i\n            yt=y+j\n            if(verify(xt,yt))\n                func(xt,yt,this.get(xt,yt))\n        }\n    },\n    forBorder(func,range=1){\n        for(let y = 0; y < 50; y++) {\n            func(0,y,this.get(0,y))\n            func(49,y,this.get(49,y))\n        }\n        for(let x = 1; x < 49; x++) {\n            func(x,0,this.get(x,0))\n            func(x,49,this.get(x,49))\n        }\n    },\n    initRoomTerrain(roomName){\n        if(!this.arr)\n            this.arr = new Array(50*50)\n        let terrain = new Room.Terrain(roomName);\n        this.forEach((x,y)=> {\n            let v = terrain.get(x,y)\n            this.set(x,y, v==TERRAIN_MASK_WALL?0xff:v==TERRAIN_MASK_SWAMP?4:2)\n        })\n    }\n}\nclass RoomArray {\n    constructor(){\n        this.__proto__ = RoomArray_proto\n    }\n}\n","import { RoomArrayTypes } from '../../../src/types';\n\nexport default class RoomArray {\n    private arr: number[]; // 存储数据的核心数组\n\n    constructor() {\n        this.arr = new Array(50 * 50).fill(0); // 初始化时直接填充数组\n    }\n\n    // 核心操作方法\n    public exec(x: number, y: number, val: number): number {\n        const tmp = this.get(x, y);\n        this.set(x, y, val);\n        return tmp;\n    }\n\n    public get(x: number, y: number): number {\n        return this.arr[x * 50 + y];\n    }\n\n    public set(x: number, y: number, value: number): void {\n        this.arr[x * 50 + y] = value;\n    }\n\n    // 初始化/重置数组\n    public init(): this {\n        this.arr.fill(0);\n        return this;\n    }\n\n    // 调试输出\n    public print(): void {\n        console.log(this.arr.toString());\n    }\n\n    // 遍历方法\n    public forEach(func: RoomArrayTypes.PositionCallback): void {\n        for (let y = 0; y < 50; y++) {\n            for (let x = 0; x < 50; x++) {\n                func(x, y, this.get(x, y));\n            }\n        }\n    }\n\n    // 四方向遍历\n    public for4Direction(func: RoomArrayTypes.PositionCallback, x: number, y: number): void {\n        const directions: [number, number][] = [[1, 0], [-1, 0], [0, 1], [0, -1]];\n        for (const [dx, dy] of directions) {\n            const xt = x + dx;\n            const yt = y + dy;\n            if (xt >= 0 && yt >= 0 && xt < 50 && yt < 50) {\n                func(xt, yt, this.get(xt, yt));\n            }\n        }\n    }\n\n    // 周围范围遍历\n    public forNear(\n        func: RoomArrayTypes.PositionCallback,\n        x: number,\n        y: number,\n        range: number = 1\n    ): void {\n        for (let i = -range; i <= range; i++) {\n            for (let j = -range; j <= range; j++) {\n                if (i === 0 && j === 0) continue; // 跳过自身\n                const xt = x + i;\n                const yt = y + j;\n                if (xt >= 0 && yt >= 0 && xt < 50 && yt < 50) {\n                    func(xt, yt, this.get(xt, yt));\n                }\n            }\n        }\n    }\n\n    // 边界遍历\n    public forBorder(func: RoomArrayTypes.PositionCallback): void {\n        // 左右边界\n        for (let y = 0; y < 50; y++) {\n            func(0, y, this.get(0, y));\n            func(49, y, this.get(49, y));\n        }\n        // 上下边界（排除角落已处理的部分）\n        for (let x = 1; x < 49; x++) {\n            func(x, 0, this.get(x, 0));\n            func(x, 49, this.get(x, 49));\n        }\n    }\n\n    // 地形初始化（假设在 Screeps 环境中）\n    public initRoomTerrainWalkAble(roomName: string): void {\n        const terrain = new Room.Terrain(roomName);\n        this.forEach((x, y) => {\n            const value = terrain.get(x, y);\n            // 转换地形值：平地（0）-> 1，墙（1）-> 0，其他保持原值\n            this.set(x, y, value === TERRAIN_MASK_WALL ? 0 : value === TERRAIN_MASK_SWAMP ? 2 : 1);\n        });\n    }\n}\n\n","/**\n * 63超级扣位置自动布局\n * 能覆盖95% 地地形布局的覆盖\n *\n * author：6g3y,Scorpior,Scokranotes,ChenyangDu\n * version:1.0.8\n *\n * 【使用方法（傻瓜版）】\n * 1.设置4个flag，分别为对应房间的\n *     pc 控制器\n *     pm 矿\n *     pa pb 能量源\n * 2.下载63大佬的超级扣位置自动布局，解压并导入wasm二进制模块，\n *   命名（不要后缀）：algo_wasm_priorityqueue，确保此时文件夹中应当增了以下两个文件\n *     + 63_good.js\n *     + algo_wasm_priorityqueue.wasm\n *\n * 3.在主循环代码的末尾，也就是main.js的module.exports.loop中最后一行添加\n *      require(\"63超级扣位置自动布局_改良版\").run()\n *\n * 4.运行（注意截图）\n * 5.放一个flag名字为p，随便放哪，运行会自动检测，检测到有p这个flag就会运行，运行完成会自动删掉\n *   显示的时间非常短，注意截图，消失了再放一个p又会重新运行一遍，不要反复折腾完，很耗CPU\n *\n * 【使用方法（高级版）】\n * 1.计算位置\n *  [flagController,flagMineral,flagSourceA,flagSourceB]\n *  必须包含.pos对象 {{{ p.pos.x|y }}}\n * >> roomStructsData = ManagerPlanner.computeManor(p.pos.roomName,[pc,pm,pa,pb])\n *\n * 2.可视化显示\n * >> HelperVisual.showRoomStructures(roomStructsData.roomName,roomStructsData.structMap)\n *\n * 【结果说明】\n * {\n *       roomName: roomName\n *       storagePos: {x,y} //storage集群中心位置\n *       labPos: {x,y} //lab中心位置\n *       structMap:{ \"rampart\" : [[x1,y1],[x2,y2] ...] ...}\n *           \"建筑类型，直接用没问题的\":[[x1,y1]]\n *           //建造的时候按顺序就可以了 ，顺序是距离 storagePos 排序过后的（除了road）\n *           //具体建造多少个，使用 CONTROLLER_STRUCTURES 获取当前可以造多少\n * }\n *\n *\n * 【警告】\n * ！！警告！！ 确保你的bucket和可运行CPU超过100个 ！！警告！！\n * ！！警告！！ 确保你的bucket和可运行CPU超过100个 ！！警告！！\n * ！！警告！！ 确保你的bucket和可运行CPU超过100个 ！！警告！！\n * ！！警告！！ 确保你的bucket和可运行CPU超过100个 ！！警告！！\n * ！！警告！！ 确保你的bucket和可运行CPU超过100个 ！！警告！！\n * ！！警告！！ 确保你的bucket和可运行CPU超过100个 ！！警告！！\n *\n *\n * 【原理】：能跑就行有空 写篇简书\n * 【代码】：挺乱的 如果有机会在整理一下代码\n *\n * 【更新说明】：\n * 1.优化了外矿的寻路\n * 2.优化了塔的布局\n * 3.更新了说明文档\n *\n * 感谢63！\n *\n */\n\n\n/**\n *  wasm 优先队列\n *  帮你加速涉及优先级的调度算法\n *\n *  author: Scorpior\n *  version: v1.1.0\n *\n *  usage:\n *  1. add .js and .wasm modules\n *  2. require .js module and use\n *\n *  本人有改动！\n */\n// @ts-ignore\nconst binary = require(`algo_wasm_priorityqueue`);\nconst _ = require(`lodash`);   // 读取二进制文件\nconst wasmModule = new WebAssembly.Module(binary);  // 初始化为wasm类\nconst RoomArray = require('./RoomArray').default; // CommonJS 语法\n\nglobal.structuresShape = {\n    \"spawn\": \"◎\",\n    \"extension\": \"ⓔ\",\n    \"link\": \"◈\",\n    \"road\": \"•\",\n    \"constructedWall\": \"▓\",\n    \"rampart\": \"⊙\",\n    \"storage\": \"▤\",\n    \"tower\": \"🔫\",\n    \"observer\": \"👀\",\n    \"powerSpawn\": \"❂\",\n    \"extractor\": \"⇌\",\n    \"terminal\": \"✡\",\n    \"lab\": \"☢\",\n    \"container\": \"□\",\n    \"nuker\": \"▲\",\n    \"factory\": \"☭\"\n}\nglobal.structuresColor = {\n    \"spawn\": \"cyan\",\n    \"extension\": \"#0bb118\",\n    \"link\": \"yellow\",\n    \"road\": \"#fa6f6f\",\n    \"constructedWall\": \"#003fff\",\n    \"rampart\": \"#003fff\",\n    \"storage\": \"yellow\",\n    \"tower\": \"cyan\",\n    \"observer\": \"yellow\",\n    \"powerSpawn\": \"cyan\",\n    \"extractor\": \"cyan\",\n    \"terminal\": \"yellow\",\n    \"lab\": \"#d500ff\",\n    \"container\": \"yellow\",\n    \"nuker\": \"cyan\",\n    \"factory\": \"yellow\"\n}\n\nlet helpervisual;\nhelpervisual = {\n    //线性同余随机数\n    rnd: function (seed) {\n        return (seed * 9301 + 49297) % 233280; //为何使用这三个数?\n    },\n    // seed 的随机颜色\n    randomColor: function (seed) {\n        seed = parseInt(seed)\n        let str = \"12334567890ABCDEF\"\n        let out = \"#\"\n        for (let i = 0; i < 6; i++) {\n            seed = helpervisual.rnd(seed + Game.time % 100)\n            out += str[parseInt(seed) % str.length]\n        }\n        return out\n    },\n    // 大概消耗1 CPU！ 慎用！\n    showRoomStructures: function (roomName, structMap) {\n        let roomStructs = new RoomArray()\n        roomStructs.init()\n        const visual = new RoomVisual(roomName);\n        structMap[\"road\"].forEach(e => roomStructs.set(e[0], e[1], \"road\"))\n        _.keys(CONTROLLER_STRUCTURES).forEach(struct => {\n            if (struct === \"road\") {\n                structMap[struct].forEach(e => {\n                    roomStructs.forNear((x, y, val) => {\n                        if (val === \"road\" && ((e[0] >= x && e[1] >= y) || (e[0] > x && e[1] < y))) visual.line(x, y, e[0], e[1], {color: structuresColor[struct]})\n                    }, e[0], e[1]);\n                    visual.text(structuresShape[struct], e[0], e[1] + 0.25, {\n                        color: structuresColor[struct],\n                        opacity: 0.75,\n                        fontSize: 7\n                    })\n                })\n            } else structMap[struct].forEach(e => visual.text(structuresShape[struct], e[0], e[1] + 0.25, {\n                color: structuresColor[struct],\n                opacity: 0.75,\n                fontSize: 7\n            }))\n        })\n    },\n}\n\nglobal.HelperVisual = helpervisual\n\n\nclass UnionFind {\n\n    constructor(size) {\n        this.size = size\n    }\n\n    init() {\n        if (!this.parent)\n            this.parent = new Array(this.size)\n        for (let i = 0; i < this.size; i++) {\n            this.parent[i] = i;\n        }\n    }\n\n    find(x) {\n        let r = x;\n        while (this.parent[r] !== r) r = this.parent[r];\n        while (this.parent[x] !== x) {\n            let t = this.parent[x];\n            this.parent[x] = r;\n            x = t;\n        }\n        return x;\n    }\n\n    union(a, b) {\n        a = this.find(a)\n        b = this.find(b)\n        if (a > b) this.parent[a] = b;\n        else if (a !== b) this.parent[b] = a;\n    }\n\n    same(a, b) {\n        return this.find(a) === this.find(b)\n    }\n}\n\n\nglobal.UnionFind = UnionFind\n\nlet NodeCache = []\n\nfunction NewNode(k, x, y, v) {\n    let t\n    if (NodeCache.length) {\n        t = NodeCache.pop()\n    } else {\n        t = {}\n    }\n    t.k = k\n    t.x = x\n    t.y = y\n    t.v = v\n    return t\n}\n\n\nfunction ReclaimNode(node) {\n    if (NodeCache.length < 10000)\n        NodeCache.push(node)\n}\n\n\n/**\n *\n * @typedef {Object} node\n * @property {number} k 优先级实数（可负）\n *\n * @typedef {{\n *      memory:{\n *          buffer: ArrayBuffer\n *      },\n *      init(is_min:number):void,\n *      push(priorty:number, id:number):void,\n *      pop():void,\n *      top():number,\n *      get_identifier(pointer:number):number,\n *      size():number,\n *      clear():void,\n *      is_empty():boolean\n *  }} cppQueue\n */\n\nclass BaseQueue {\n\n    /**\n     * 队列元素个数\n     * @returns {number}\n     */\n    size() {\n        // @ts-ignore\n        return this.instance.size();\n    }\n\n    /**\n     * 清空整个队列\n     */\n    clear() {\n        // @ts-ignore\n        this.instance.clear();\n    }\n\n    /**\n     * 队列是否为空\n     * @returns {boolean} 实际返回值是0或1\n     */\n    isEmpty() {\n        // @ts-ignore\n        return !this.instance.is_empty();\n    }\n}\n\n/**\n *  c++优先队列\n *  最大容量 131072 个元素（2的17次方）\n *  每个元素是带有priority属性的任意对象\n *  连续pop 100k个元素时比js队列快 80% 以上，元素个数少时比js快 5~10 倍\n */\nclass PriorityQueue extends BaseQueue {\n    /**\n     * @param {boolean} isMinRoot 优先级方向，true则pop()时得到数字最小的，否则pop()出最大的\n     */\n    constructor(isMinRoot = false) {\n        super();\n        /**@type {cppQueue} */\n        let instance;\n        /**@type {node[]} */\n        let cache = [];\n\n        const imports = {   // 把wasm类实例化需要的接口函数\n            env: {\n                emscripten_notify_memory_growth() {\n                }\n            },\n            wasi_snapshot_preview1: {\n                proc_exit: () => {\n                }\n            }\n        };\n        // @ts-ignore\n        instance = new WebAssembly.Instance(wasmModule, imports).exports;   // 实例化\n        instance.init(+!!isMinRoot);  // !!转化为boolean, +转为数字\n\n        /**\n         * @param {node} node\n         */\n        this.push = (node) => {\n            try {\n                instance.push(node.k, cache.length);\n                cache.push(node);\n            } catch (e) {\n                if (e instanceof TypeError) {\n                    throw e;\n                } else {\n                    throw Error(`priorityQueue is full.\\n\\t Current size is ${instance.size()}, buffer length is ${instance.memory.buffer.byteLength * 2 / 1024}KB.`);\n                }\n            }\n        }\n        /**\n         *  @returns {node|undefined}\n         */\n        this.pop = () => {\n            if (instance.size() > 0) {\n                let pointer = instance.top();\n                let id = instance.get_identifier(pointer);\n                let node = cache[id];\n                instance.pop();\n                // @ts-ignore\n                cache[id] = undefined;\n                return node;\n            } else {\n                return undefined;\n            }\n        }\n        /**\n         *  @returns {node|undefined}\n         */\n        this.top = () => {\n            if (instance.size() > 0) {\n                let pointer = instance.top();\n                return cache[instance.get_identifier(pointer)];\n            } else {\n                return undefined;\n            }\n        }\n        /**\n         *  @returns {undefined}\n         */\n        this.whileNoEmpty = (func) => {\n            while (!this.isEmpty()) {\n                let node = this.pop();\n                func(node)\n                ReclaimNode(node)\n            }\n        }\n\n        Object.defineProperty(this, 'instance', {   // 不想被枚举到\n            value: instance\n        })\n    }\n\n    /**\n     *  把节点插入队列\n     * @param {node} node 待插入对象，至少含有priority:k属性\n     */\n    push(node) {\n    }\n\n    /**\n     *  查看顶端节点，空队列返回undefined\n     *  @returns {node|undefined}\n     */\n    top() {\n    }\n\n    /**\n     *  取出顶端节点，空队列返回undefined\n     *  @returns {node|undefined}\n     */\n    pop() {\n    }\n}\n\nglobal.PriorityQueue = PriorityQueue\nglobal.NewNode = NewNode\nglobal.ReclaimNode = ReclaimNode\n// module.exports = {\n//     PriorityQueue: PriorityQueue\n// }\n\n\nglobal.minPlaneCnt = 140 // 内部布局最小面积！ 试过了，140是 基本上最低配置了\n\nlet visited = new RoomArray()\nlet roomWalkable = new RoomArray()\nlet nearWall = new RoomArray()\nlet routeDistance = new RoomArray()\nlet roomObjectCache = new RoomArray()\n\nlet nearWallWithInterpolation = new RoomArray()\nlet interpolation = new RoomArray()\n\nlet queMin = new PriorityQueue(true)\nlet queMin2 = new PriorityQueue(true)\nlet startPoint = new PriorityQueue(true)\n\nlet unionFind = new UnionFind(50 * 50);\n\n/**\n * controller mineral source posList\n */\nlet objects = []\n\nlet pro = {\n    /**\n     * https://www.bookstack.cn/read/node-in-debugging/2.2heapdump.md\n     * 防止内存泄漏！！！！\n     * 闭包太多，改不动了\n     */\n    init() {\n        visited = new RoomArray()\n        roomWalkable = new RoomArray()\n        nearWall = new RoomArray()\n        routeDistance = new RoomArray()\n\n        nearWallWithInterpolation = new RoomArray()\n        interpolation = new RoomArray()\n        roomObjectCache = new RoomArray()\n\n        queMin = new PriorityQueue(true)\n        queMin2 = new PriorityQueue(true)\n        startPoint = new PriorityQueue(true)\n\n        unionFind = new UnionFind(50 * 50);\n\n\n        visited.init()\n        nearWall.init()\n        routeDistance.init()\n        roomWalkable.init()\n\n        nearWallWithInterpolation.init()\n        interpolation.init()\n        roomObjectCache.init()\n        unionFind.init()\n\n        queMin.clear()\n        queMin2.clear()\n        startPoint.clear()\n    },\n    /**\n     * 防止内存泄漏！！！！\n     */\n    dismiss() {\n        visited = null\n        roomWalkable = null\n        nearWall = null\n        routeDistance = null\n        roomObjectCache = null\n\n        nearWallWithInterpolation = null\n        interpolation = null\n\n        queMin = null\n        queMin2 = null\n        startPoint = null\n\n        unionFind = null\n        objects = []\n    },\n    /**\n     * 计算区块的最大性能指标 ，性能消耗的大头！\n     * 优化不动了\n     */\n    getBlockPutAbleCnt(roomWalkable, visited, queMin, unionFind, tarRoot, putAbleCacheMap, AllCacheMap) {\n        if (putAbleCacheMap[tarRoot]) return [putAbleCacheMap[tarRoot], AllCacheMap[tarRoot]]\n        // let t = Game.cpu.getUsed() //这很吃性能，但是是必须的\n        let roomManor = routeDistance\n        roomManor.init()\n        roomManor.forEach((x, y) => {\n            if (tarRoot === unionFind.find(x * 50 + y)) {\n                roomManor.set(x, y, 1)\n            }\n        })\n        //roomManor.print()\n        roomManor.forEach((x, y, val) => {\n            if (val) {\n                let manorCnt = 0\n                let wallCnt = 0\n                roomManor.for4Direction((x1, y1, val1) => {\n                    if (val1) manorCnt += 1\n                    if (!roomWalkable.get(x1, y1)) wallCnt += 1\n                }, x, y)\n                if (manorCnt === 1 && wallCnt === 0) roomManor.set(x, y, 0)\n            }\n        })\n        let dfsMoreManor = function (x, y, val) {\n            if (!val && roomWalkable.get(x, y)) {\n                let manorCnt = 0\n                let wallCnt = 0\n                roomManor.for4Direction((x1, y1, val1) => {\n                    if (val1) manorCnt += 1\n                    if (!roomWalkable.get(x1, y1)) wallCnt += 1\n                }, x, y)\n                if (manorCnt >= 2 || manorCnt === 1 && wallCnt >= 2) {\n                    roomManor.set(x, y, 1)\n                    roomManor.for4Direction((x1, y1, val1) => {\n                        dfsMoreManor(x1, y1, val1)\n                    }, x, y)\n                }\n            }\n        }\n        roomManor.forEach((x, y, val) => {\n            dfsMoreManor(x, y, val)\n        })\n        roomWalkable.forBorder((x, y, val) => {\n            if (val) {\n                roomManor.forNear((x, y) => {\n                    roomManor.set(x, y, 0)\n                }, x, y)\n                roomManor.set(x, y, 0)\n            }\n        })\n\n        let innerPutAbleList = []\n        let AllCacheList = []\n\n\n        // &&!roomObjectCache.get(x,y)\n        visited.init()/*\n        roomWalkable.forEach((x, y, val)=>{\n            if(!roomManor.get(x,y)||roomObjectCache.get(x,y)) {\n                // const visual = new RoomVisual(\"W3N6\");\n                // if(roomObjectCache.get(x,y))visual.text(val&&!roomObjectCache.get(x,y)?-4:-1, x,y+0.25, {color: 'red',opacity:0.99,font: 7})\n                // queMin.push(NewNode(val&&!roomObjectCache.get(x,y)?-4:-1,x,y));\n                let innerWall = false //在墙上的时候要退一格子\n                if(roomObjectCache.get(x,y)){\n                    roomManor.forNear((x,y,val)=>{if(!val&&roomWalkable.get(x,y))innerWall=true},x,y)\n                }\n                queMin.push(NewNode(val?((roomObjectCache.get(x,y)&&!innerWall)?-1:-4):-1,x,y));\n                // visited.set(x,y,1) 这里不能设置visited 因为 -4 和-1 优先级不同 如果 -4距离和-1比较，-1会抢走-4 导致 rangeAttack打得到\n            }\n        })*/\n\n        roomWalkable.forEach((x, y, val) => {\n            if (!roomManor.get(x, y)) {\n                queMin.push(NewNode(val ? -4 : -1, x, y));\n                // visited.set(x,y,1) 这里不能设置visited 因为 -4 和-1 优先级不同 如果 -4距离和-1比较，-1会抢走-4 导致 rangeAttack打得到\n            }\n        })\n\n        // let t = Game.cpu.getUsed() //这很吃性能，真的优化不动了\n\n        queMin.whileNoEmpty(nd => {\n            let func = function (x, y, val) {\n                let item = NewNode(nd.k + 2, x, y);\n                if (!visited.exec(x, y, 1)) {\n                    queMin.push(NewNode(nd.k + 1, x, y))\n                    if (roomManor.get(x, y)) {\n                        if (nd.k + 1 >= 0 && val) {\n                            innerPutAbleList.push(item)\n                            // visual.text(nd.k+2, x,y+0.25, {color: 'red',opacity:0.99,font: 7})\n                        }\n                        if (val)\n                            AllCacheList.push(item)\n                    }\n                }\n            }\n            visited.set(nd.x, nd.y, 1)\n            if (nd.k >= -1)\n                roomWalkable.for4Direction(func, nd.x, nd.y)\n            else\n                roomWalkable.forNear(func, nd.x, nd.y)\n        })\n\n        // console.log(Game.cpu.getUsed()-t)\n\n        putAbleCacheMap[tarRoot] = innerPutAbleList\n        AllCacheMap[tarRoot] = AllCacheList\n        return [putAbleCacheMap[tarRoot], AllCacheMap[tarRoot]]\n    },\n    /**\n     * 插值，计算区块的预处理和合并需求\n     * @param roomName\n     */\n    computeBlock(roomName) {\n        const visual = new RoomVisual(roomName);\n\n        roomWalkable.initRoomTerrainWalkAble(roomName)\n\n        //计算距离山体要多远\n        roomWalkable.forEach((x, y, val) => {\n            if (!val) {\n                queMin.push(NewNode(0, x, y));\n                visited.set(x, y, 1)\n            }\n        })\n\n\n        queMin.whileNoEmpty(nd => {\n            //数字打印\n            //visual.text(Math.floor(nd.k), nd.x,nd.y+0.25, {color: \"white\",opacity:0.75,fontSize: 7})\n            //颜色打印\n            //{if(nd.k>0)visual.circle(nd.x, nd.y, {fill: \"#ff9797\", radius: 0.5 ,opacity : 0.05*nd.k+0.01})}\n\n            roomWalkable.for4Direction((x, y, val) => {\n                if (!visited.exec(x, y, 1) && val) {\n                    queMin.push(NewNode(nd.k + 1, x, y))\n                }\n            }, nd.x, nd.y)\n            nearWall.exec(nd.x, nd.y, nd.k)\n        })\n\n        //距离出口一格不能放墙\n        roomWalkable.forBorder((x, y, val) => {\n            if (val) {\n                roomWalkable.forNear((x, y, val) => {\n                    if (val) {\n                        // roomWalkable.set(x,y,0);\n                        nearWall.set(x, y, 50);\n                        queMin.push(NewNode(0, x, y));\n                        // visited.set(x,y,1)\n                    }\n                }, x, y)\n                // roomWalkable.set(x,y,0);\n                queMin.push(NewNode(0, x, y));\n                nearWall.set(x, y, 50)\n                // visited.set(x,y,1)\n            }\n        })\n\n        // 颜色\n        //nearWall.forEach((x, y, val)=>{if(val>0)visual.circle(x, y, {fill: \"#ff9797\", radius: 0.5 ,opacity : 0.05*val+0.01})})\n        //数字\n        //nearWall.forEach((x, y, val)=>visual.text(Math.floor(val), x,y+0.25, {color: \"white\",opacity:0.75,fontSize: 7}))\n\n        let roomPutAble = routeDistance\n        roomPutAble.initRoomTerrainWalkAble(roomName)\n        roomWalkable.forBorder((x, y, val) => {\n            if (val) {\n                roomWalkable.forNear((x, y, val) => {\n                    if (val) {\n                        roomPutAble.set(x, y, 0)\n                    }\n                }, x, y)\n                roomPutAble.set(x, y, 0)\n            }\n        })\n        // 计算 控制器，矿物的位置\n        let getObjectPos = function (x, y, struct) {\n            let put = false\n            let finalX = 0\n            let finalY = 0\n            roomPutAble.for4Direction((x, y, val) => {\n                if (val && !put && !roomObjectCache.get(x, y)) {\n                    finalX = x\n                    finalY = y\n                    put = true\n                }\n            }, x, y)\n            roomPutAble.forNear((x, y, val) => {\n                if (val && !put && !roomObjectCache.get(x, y)) {\n                    finalX = x\n                    finalY = y\n                    put = true\n                }\n            }, x, y)\n            roomObjectCache.set(finalX, finalY, struct)\n            return [finalX, finalY]\n        }\n        for (let i = 0; i < objects.length; i++) {\n            let pos = objects[i]\n            //container 位置\n            let p = getObjectPos(pos.x, pos.y, \"container\")\n\n            // link 位置\n            if (i !== 1) {\n                let linkPos = getObjectPos(p[0], p[1], \"link\")\n                roomObjectCache.link = roomObjectCache.link || []\n                roomObjectCache.link.push(linkPos) // link controller 然后是  source\n            } else {\n                roomObjectCache.extractor = [[pos.x, pos.y]]\n            }\n            roomObjectCache.container = roomObjectCache.container || []\n            if (i !== 1) roomObjectCache.container.unshift(p) //如果是 mineral 最后一个\n            else roomObjectCache.container.push(p)\n        }\n\n        //插值，这里用拉普拉斯矩阵，对nearWall 插值 成 nearWallWithInterpolation\n        nearWall.forEach((x, y, val) => {\n            let value = -4 * val\n            nearWall.for4Direction((x, y, val) => {\n                value += val\n            }, x, y)\n            interpolation.set(x, y, value)\n            if (value > 0) value = 0;\n            if (val && roomWalkable.get(x, y)) nearWallWithInterpolation.set(x, y, val + value * 0.1)\n        })\n\n        // 计算距离出口多远\n        visited.init()\n        routeDistance.init()\n        queMin.whileNoEmpty(nd => {\n            roomWalkable.forNear((x, y, val) => {\n                if (!visited.exec(x, y, 1) && val) {\n                    queMin.push(NewNode(nd.k + 1, x, y))\n                }\n            }, nd.x, nd.y)\n            routeDistance.set(nd.x, nd.y, nd.k)\n        })\n        // 颜色\n        //routeDistance.forEach((x, y, val)=>{if(val>0)visual.circle(x, y, {fill: \"#ff9797\", radius: 0.5 ,opacity : 0.01*val+0.01})})\n        //数字\n        //routeDistance.forEach((x, y, val)=>visual.text(Math.floor(val), x,y+0.25, {color: \"white\",opacity:0.75,fontSize: 7}))\n        // 对距离的格子插入到队列 ，作为分开的顺序\n        routeDistance.forEach((x, y, val) => {\n            if (!roomWalkable.get(x, y)) return\n            if (val) startPoint.push(NewNode(-val, x, y))\n            //数字打印\n            //visual.text(Math.floor(nd.k), nd.x,nd.y+0.25, {color: \"white\",opacity:0.75,fontSize: 7})\n            //颜色打印\n            //{if(nd.k>0)visual.circle(nd.x, nd.y, {fill: \"#ff9797\", radius: 0.5 ,opacity : 0.05*nd.k+0.01})}\n        })\n\n\n        let sizeMap = {}\n        let posSeqMap = {}\n\n        // 分块，将地图分成一小块一小块\n        visited.init()\n        for (let i = 0; i < 100000; i++) {\n            if (startPoint.isEmpty()) break;\n            let cnt = 0\n            // let color = randomColor(i)\n            let nd = startPoint.pop()\n            //visual.circle(nd.x, nd.y, {fill: \"#ff9797\", radius: 0.5, opacity: 0.05 * -nd.k + 0.01})\n            //visual.text(Math.floor(nd.k), nd.x,nd.y+0.25, {color: \"white\",opacity:0.75,fontSize: 7})\n\n            let currentPos = nd.x * 50 + nd.y\n            let posSeq = []\n\n            //搜索分块\n            let dfsFindDown = function (roomArray, x, y) {\n                let currentValue = roomArray.get(x, y)\n                if (!visited.exec(x, y, 1)) {\n                    roomArray.for4Direction((x1, y1, val) => {\n                        if (val && (x1 === x || y1 === y) && val < currentValue) {\n                            dfsFindDown(roomArray, x1, y1)\n                        }\n                    }, x, y)\n                    cnt++\n                    // visual.circle(x,y, {fill: color, radius: 0.5 ,opacity : 0.5})\n                    let pos = x * 50 + y\n                    posSeq.push(pos)\n                    unionFind.union(currentPos, pos)\n                }\n            }\n\n            // 跑到最高点\n            let dfsFindUp = function (roomArray, x, y) {\n                let currentValue = roomArray.get(x, y)\n                if (!visited.exec(x, y, 1)) {\n                    roomArray.forNear((x1, y1, val) => {\n                        if (val > currentValue && currentValue < 6) { //加了一点优化，小于时分裂更过\n                            dfsFindUp(roomArray, x1, y1)\n                        } else if (val && val < currentValue) {\n                            dfsFindDown(roomArray, x1, y1)\n                        }\n                    }, x, y)\n                    cnt++\n                    // visual.circle(x,y, {fill: color, radius: 0.5 ,opacity : 0.5})\n                    let pos = x * 50 + y\n                    posSeq.push(pos)\n                    unionFind.union(currentPos, pos)\n                }\n            }\n            dfsFindUp(nearWallWithInterpolation, nd.x, nd.y)\n\n            //记录每一块的位置和大小 以 并查集的根节点 作为记录点\n            if (cnt > 0) {\n                let pos = unionFind.find(currentPos);\n                // queMin.push({k:cnt,v:pos})\n                queMin.push(NewNode(cnt, 0, 0, pos))\n                sizeMap[pos] = cnt\n                posSeqMap[pos] = posSeq\n            }\n        }\n        // Object.keys(posSeqMap).forEach(pos => {\n        //     // posSeqMap[pos].forEach(e=>{            {\n        //     //     let y = e%50;\n        //     //     let x = ((e-y)/50);//Math.round\n        //     //     nearWallWithInterpolation.forEach((x, y, val)=>{if(val>0)visual.circle(x, y, {fill: \"#ff9797\", radius: 0.5 ,opacity : 0.05*pos+0.01})})\n        //     // }})\n        //     const posNum = Number(pos)\n        //     let y = posNum % 50;\n        //     let x = ((posNum - y) / 50);//Math.round\n        //\n        //     visual.circle(x, y, {fill: \"#ff9797\", radius: 0.5, opacity: 0.05 * posNum/100 + 0.01})\n        //     visual.text(Math.floor(sizeMap[pos]), x,y+0.25, {color: \"white\",opacity:0.75,fontSize: 7})\n        //\n        //     //console.log(pos)\n        //     //console.log(typeof pos)\n        // })\n\n        // 将出口附近的块删掉\n        roomWalkable.forBorder((x, y, val) => {\n            if (val) {\n                roomWalkable.forNear((x, y, val) => {\n                    if (val) {\n                        let pos = unionFind.find(x * 50 + y);\n                        if (sizeMap[pos]) delete sizeMap[pos]\n                    }\n                }, x, y)\n                let pos = unionFind.find(x * 50 + y);\n                if (sizeMap[pos]) delete sizeMap[pos]\n            }\n        })\n\n        let putAbleCacheMap = {}\n        let allCacheMap = {}\n        // let i = 0\n        // 合并小块成大块的\n        queMin.whileNoEmpty(nd => {\n            let pos = nd.v;\n            if (nd.k !== sizeMap[pos]) return;// 已经被合并了\n            // i++;\n\n            visited.init()\n            let nearCntMap = {}\n            let allNearCnt = 0\n\n            //搜索附近的块\n            posSeqMap[pos].forEach(e => {\n                let y = e % 50;\n                let x = ((e - y) / 50);//Math.round\n                roomWalkable.forNear((x, y, val) => {\n                    if (val && !visited.exec(x, y, 1)) {\n                        let currentPos = unionFind.find(x * 50 + y);\n                        if (currentPos === pos) return;\n                        allNearCnt += 1\n                        // if(i==104)\n                        // visual.text(parseInt(1*10)/10, x,y+0.25, {color: \"cyan\",opacity:0.99,font: 7})\n                        let currentSize = sizeMap[currentPos];\n                        if (currentSize < 300) {\n                            nearCntMap[currentPos] = (nearCntMap[currentPos] || 0) + 1;\n                        }\n                    }\n                }, x, y)\n            })\n\n            let targetPos = undefined;\n            let nearCnt = 0;\n            let maxRatio = 0;\n\n            // 找出合并附近最优的块\n            _.keys(nearCntMap).forEach(currentPos => {\n                let currentRatio = nearCntMap[currentPos] / Math.sqrt(Math.min(sizeMap[currentPos], nd.k))//实际/期望\n                if (currentRatio === maxRatio ? sizeMap[currentPos] < sizeMap[targetPos] : currentRatio > maxRatio) {\n                    targetPos = currentPos;\n                    maxRatio = currentRatio;\n                    nearCnt = nearCntMap[currentPos];\n                }\n            })\n            _.keys(nearCntMap).forEach(currentPos => {\n                if (nearCnt < nearCntMap[currentPos]) {\n                    targetPos = currentPos;\n                    nearCnt = nearCntMap[currentPos];\n                }\n            })\n            let minSize = sizeMap[targetPos];\n            let cnt = nd.k + minSize;\n            // let nearRatio =nearCntMap[targetPos]/allNearCnt;\n\n            let targetBlockPutAbleCnt = 0\n            let ndkBlockPutAbleCnt = 0\n            if (minSize > minPlaneCnt)\n                targetBlockPutAbleCnt = pro.getBlockPutAbleCnt(roomWalkable, visited, queMin2, unionFind, targetPos, putAbleCacheMap, allCacheMap)[0].length\n            if (nd.k > minPlaneCnt)\n                ndkBlockPutAbleCnt = pro.getBlockPutAbleCnt(roomWalkable, visited, queMin2, unionFind, nd.v, putAbleCacheMap, allCacheMap)[0].length\n\n            //if(targetBlockPutAbleCnt||ndkBlockPutAbleCnt)clog(targetBlockPutAbleCnt,ndkBlockPutAbleCnt)\n            //打印中间变量\n            // if(targetPos&&cnt>50&&(targetBlockPutAbleCnt||ndkBlockPutAbleCnt)){\n            //     let y = pos%50\n            //     let x = Math.round((pos-y)/50)\n            //     let y1 = targetPos%50\n            //     let x1 = Math.round((targetPos-y1)/50)\n            //     visual.line(x,y,x1,y1)\n            //     visual.text(nd.k+\"+\"+minSize+\"=\"+cnt, (x+x1)/2,(y+y1)/2-0.25, {color: \"red\",opacity:0.99,font: 7})\n            //     visual.text(allNearCnt+\"_\"+nearCntMap[targetPos]+\" \"+nearCnt+\" \"+parseInt(nearCnt/Math.sqrt(Math.min(minSize,nd.k))*100)/100+\" \"+parseInt(maxRatio-Math.sqrt(nd.k)/12*100)/100, (x+x1)/2,(y+y1)/2+0.25, {color: \"yellow\",opacity:0.99,font: 7})\n            //     visual.text(parseInt(targetBlockPutAbleCnt*100)/100+\" \"+parseInt(ndkBlockPutAbleCnt*100)/100, (x+x1)/2,(y+y1)/2+0.25, {color: \"yellow\",opacity:0.99,font: 7})\n            // }\n\n            // if(targetPos&&((cnt<=250&&maxRatio>0.7)||(cnt<=300&&maxRatio>0.8)||(cnt<=350&&maxRatio>0.9)||(maxRatio>1&&cnt<400)||nd.k<=10)){//||maxRatio>1.5\n            // if(targetPos&&(maxRatio-cnt/500>0.2&&cnt<400)){//||maxRatio>1.5\n\n            // cnt = targetBlockPutAbleCnt+ndkBlockPutAbleCnt;\n            // 合并\n            if (targetPos && Math.max(targetBlockPutAbleCnt, ndkBlockPutAbleCnt) < minPlaneCnt) {//&&(maxRatio-Math.sqrt(cnt)/20>=0||(nearRatio>0.7&&nd.k<100))\n                // if(targetPos&&(cnt<300||Math.min(nd.k,minSize)<150)&&(maxRatio-Math.sqrt(cnt)/20>=0||Math.max(nd.k,minSize)<200||(nearRatio>0.7&&nd.k<100))){//*Math.sqrt(nearRatio)\n\n\n                unionFind.union(pos, targetPos);\n                nd.v = unionFind.find(pos);\n\n                if (pos !== nd.v) delete sizeMap[pos];\n                else delete sizeMap[targetPos];\n\n                nd.k = cnt;\n                sizeMap[nd.v] = cnt;\n                posSeqMap[nd.v] = posSeqMap[targetPos].concat(posSeqMap[pos])\n                delete putAbleCacheMap[nd.v]\n                delete putAbleCacheMap[targetPos]\n                if (pos !== nd.v) delete posSeqMap[pos];\n                else delete posSeqMap[targetPos];\n                queMin.push(NewNode(nd.k, nd.x, nd.y, nd.v));\n            }\n\n        })\n        // 打印结果\n\n        // const visual = new RoomVisual(roomName);\n        // _.keys(sizeMap).forEach(e=>{\n        //     let y = e%50\n        //     let x = ((e-y)/50)//Math.round\n        //     let color = \"red\"\n        //     let cnt = pro.getBlockPutAbleCnt(roomWalkable,visited,queMin2,unionFind,e,putAbleCacheMap).length\n        //     pro.getBlockPutAbleCnt(roomWalkable,visited,queMin2,unionFind,e,putAbleCacheMap).forEach(t=>{\n        //         visual.circle(t.x, t.y, {fill: randomColor(e), radius: 0.5 ,opacity : 0.35})\n        //     })\n        //     // let cnt = sizeMap[e]\n        //     if(sizeMap[e]>0)visual.text(parseInt(cnt*10)/10, x,y+0.25, {color: color,opacity:0.99,font: 7})\n        // })\n\n        //块打印\n        //roomWalkable.forEach((x, y, val)=>{if(val>0&&sizeMap[unionFind.find(x*50+y)]>0)visual.circle(x, y, {fill: helpervisual.randomColor(unionFind.find(x*50+y)), radius: 0.5 ,opacity : 0.15})})\n\n\n        // 打印中间变量\n        // 颜色\n        //nearWallWithInterpolation.forEach((x, y, val)=>{if(val>0)visual.circle(x, y, {fill: \"#ff9797\", radius: 0.5 ,opacity : 0.05*val+0.01})})\n        //数字\n        //nearWallWithInterpolation.forEach((x, y, val)=>visual.text(Math.floor(val), x,y+0.25, {color: \"white\",opacity:0.75,fontSize: 7}))\n\n        //nearWall.forEach((x, y, val)=>{if(val)visual.text(parseInt(val*10)/10, x,y+0.25, {color: \"red\",opacity:0.5,font: 7})})\n\n        return [unionFind, sizeMap, roomWalkable, nearWall, putAbleCacheMap, allCacheMap]\n\n    },\n    /**\n     * 计算 分布图\n     * 计算建筑的位置\n     * @param roomName 房间名称\n     * @param points[] [flagController,flagMineral,flagSourceA,flagSourceB]\n     * @return result { roomName:roomName,storagePos:{x,y},labPos:{x,y},structMap:{ \"rampart\" : [[x1,y1],[x2,y2] ...] ...} }\n     */\n    computeManor(roomName, points) {\n        pro.init()\n        for (let p of points) {\n            if (p.pos && p.pos.roomName === roomName) objects.push(p.pos)\n        }\n        const visual = new RoomVisual(roomName);\n        //计算块\n        let blockArray = pro.computeBlock(roomName)\n\n        let unionFind = blockArray[0]\n        let sizeMap = blockArray[1]\n        let wallMap = {}\n        let roomWalkable = blockArray[2]\n        let nearWall = blockArray[3]\n        let putAbleCacheMap = blockArray[4]\n        let allCacheMap = blockArray[5]\n\n        let roomManor = interpolation\n        let roomStructs = nearWallWithInterpolation\n\n\n        roomManor.init()\n        roomStructs.init()\n\n        // let closeToWall = new RoomArray()\n        nearWall.init()\n\n        // let queMin = new PriorityQueue(true)\n        queMin.clear()\n        // let visited = new RoomArray()\n\n        let finalPos = undefined;\n        let wallCnt = 1e9;\n        let putAbleList = []\n        let innerPutAbleList = []\n\n        let centerX = undefined;\n        let centerY = undefined;\n        _.keys(sizeMap).forEach(pos => {\n            // if(sizeMap[pos]<150)return\n            pro.getBlockPutAbleCnt(roomWalkable, visited, queMin, unionFind, pos, putAbleCacheMap, allCacheMap)\n            let currentPutAbleList = putAbleCacheMap[pos]\n            let allList = allCacheMap[pos]\n            if (currentPutAbleList.length < minPlaneCnt) return\n\n            wallMap[pos] = []\n\n            visited.init()\n            roomWalkable.forBorder((x, y, val) => {\n                if (val) {\n                    queMin.push(NewNode(0, x, y));\n                    visited.set(x, y, 1)\n                }\n            })\n\n            let roomManor = routeDistance //当前的Manor\n            roomManor.init()\n            allList.forEach(e => {\n                roomManor.set(e.x, e.y, 1)\n            })\n            // currentPutAbleList.forEach(e=>visual.text(e.k, e.x,e.y+0.25, {color: 'red',opacity:0.99,font: 7}))\n\n            queMin.whileNoEmpty(nd => {\n                if (!roomManor.get(nd.x, nd.y))\n                    roomWalkable.forNear((x, y, val) => {\n                        if (!visited.exec(x, y, 1) && val) {\n                            if (!roomManor.get(x, y))\n                                queMin.push(NewNode(nd.k + 1, x, y))\n                            else {\n                                wallMap[pos].push(NewNode(0, x, y))\n                                // visual.text('X', x,y+0.25, {color: 'red',opacity:0.99,font: 7})\n                            }\n                        }\n                    }, nd.x, nd.y)\n            })\n\n            // wallMap[pos].forEach(xy=>queMin.push(NewNode(0,xy.x,xy.y)))\n\n            let currentInnerPutAbleList = currentPutAbleList\n\n            let maxDist = 0;\n            let filter2 = currentInnerPutAbleList.filter(e => e.k > 2);\n            if (filter2.length < 30) {\n                filter2.forEach(a => {\n                    filter2.forEach(b => {\n                        maxDist = Math.max(maxDist, Math.abs(a.x - b.x) + Math.abs(a.y - b.y))\n                    })\n                })\n            }\n\n            let currentWallCnt = wallMap[pos].length;\n            // {\n            //     let y = pos%50\n            //     let x = ((pos-y)/50)//Math.round\n            //     visual.text(parseInt((allList.length)*10)/10, x,y, {color: \"yellow\",opacity:0.99,font: 7})\n            //     visual.text(parseInt((currentPutAbleList.length)*10)/10, x,y+0.5, {color: \"red\",opacity:0.99,font: 7})\n            //     visual.text(parseInt((currentInnerPutAbleList.length)*10)/10, x,y+1, {color: \"red\",opacity:0.99,font: 7})\n            // }\n            if (minPlaneCnt < currentPutAbleList.length && wallCnt > currentWallCnt && (currentInnerPutAbleList.filter(e => e.k > 1).length > 30 || maxDist > 5)) {\n                putAbleList = currentPutAbleList\n                innerPutAbleList = currentInnerPutAbleList\n                wallCnt = currentWallCnt\n                finalPos = pos\n                centerX = currentPutAbleList.map(e => e.x).reduce((a, b) => a + b) / currentPutAbleList.length;\n                centerY = currentPutAbleList.map(e => e.y).reduce((a, b) => a + b) / currentPutAbleList.length;\n            }\n\n            // allCacheMap[pos].forEach(t=>{\n            //     visual.circle(t.x, t.y, {fill: randomColor(pos), radius: 0.5 ,opacity : 0.15})\n            // })\n        })\n\n        if (!putAbleCacheMap[finalPos])\n            return\n\n        let walls = wallMap[finalPos]\n\n\n        roomManor.init()\n        allCacheMap[finalPos].forEach(e => {\n            roomManor.set(e.x, e.y, -1)\n        })\n        innerPutAbleList.forEach(e => {\n            roomManor.set(e.x, e.y, e.k)\n        })\n\n        // visited.init()\n        // roomWalkable.forEach((x, y, val)=>{if(!roomManor.get(x,y)){queMin.push(NewNode(val?-3:-1,x,y));visited.set(x,y,1)}})\n\n\n        let storageX = 0\n        let storageY = 0\n        let storageDistance = 100\n\n        // innerPutAbleList.forEach(e=>visual.text(e.k, e.x,e.y+0.25, {color: 'red',opacity:0.99,font: 7}))\n        innerPutAbleList.filter(e => e.k > 2).forEach(e => {\n            let x = e.x\n            let y = e.y\n            let detX = centerX - x\n            let detY = centerY - y\n            let distance = Math.sqrt(detX * detX + detY * detY)\n            if (storageDistance > distance) {\n                storageDistance = distance\n                storageX = x\n                storageY = y\n            }\n        })\n\n\n        if (Game.flags.storagePos) {\n            storageX = Game.flags.storagePos.pos.x;\n            storageY = Game.flags.storagePos.pos.y;\n        }\n\n        let labX = 0\n        let labY = 0\n        let labDistance = 1e5\n        innerPutAbleList.filter(e => e.k > 4).forEach(e => {\n            let x = e.x\n            let y = e.y\n            let detX = centerX - x\n            let detY = centerY - y\n            let distance = Math.sqrt(detX * detX + detY * detY)\n\n            if (labDistance > distance && Math.abs(x - storageX) + Math.abs(y - storageY) > 5) {\n                labDistance = distance\n                labX = x\n                labY = y\n            }\n        })\n\n        roomManor.forEach((x, y, val) => {\n            if (val >= 2) {\n                // if(roomManor.get(x,y)>0&&Math.abs(x-storageX)+Math.abs(y-storageY)>2)\n                // visual.text(val, x,y+0.25, {color: 'cyan',opacity:0.99,font: 7})\n                let distance = Math.sqrt(Math.pow(centerX - x - 0.5, 2) + Math.pow(centerY - y - 0.5, 2))\n                if (labDistance <= distance) return;\n                let checkCnt = 0;\n                let check = function (x, y) {\n                    if (roomManor.get(x, y) > 0 && Math.abs(x - storageX) + Math.abs(y - storageY) > 2) {\n                        checkCnt += 1;\n                    }\n                }\n                for (let i = -1; i < 3; i++)\n                    for (let j = -1; j < 3; j++)\n                        check(x + i, y + j);\n                if (checkCnt === 16) {\n                    labDistance = distance\n                    labX = x\n                    labY = y\n                }\n            }\n        })\n\n\n        // visual.text(\"C\", centerX,centerY+0.25, {color: 'green',opacity:0.99,font: 7})\n        // visual.text(\"S\", storageX,storageY+0.25, {color: 'blue',opacity:0.99,font: 7})\n        // visual.text(\"L\", labX+0.5,labY+0.75, {color: 'blue',opacity:0.99,font: 7})\n        // clog(roomName)\n\n        // clog(roomName,storageX,storageY,labX,labY,innerPutAbleList.length,wallCnt,finalPos)\n        // clog(innerPutAbleList.filter(e=>e.k==1).length)\n\n        // _.keys(sizeMap).forEach(e=>{\n        //     let y = e%50\n        //     let x = ((e-y)/50)//Math.round\n        //     let color = \"red\"\n        //     if(sizeMap[e]>0)visual.text(parseInt(sizeMap[e]*10)/10, x,y+1+0.25, {color: color,opacity:0.99,font: 7})\n        // })\n\n        // CONTROLLER_STRUCTURES: {\n        //     \"spawn\": {0: 0, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 2, 8: 3},\n        //     \"extension\": {0: 0, 1: 0, 2: 5, 3: 10, 4: 20, 5: 30, 6: 40, 7: 50, 8: 60},\n        //     \"link\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 2, 6: 3, 7: 4, 8: 6},\n        //     \"road\": {0: 2500, 1: 2500, 2: 2500, 3: 2500, 4: 2500, 5: 2500, 6: 2500, 7: 2500, 8: 2500},\n        //     \"constructedWall\": {1: 0, 2: 2500, 3: 2500, 4: 2500, 5: 2500, 6: 2500, 7: 2500, 8: 2500},\n        //     \"rampart\": {1: 0, 2: 2500, 3: 2500, 4: 2500, 5: 2500, 6: 2500, 7: 2500, 8: 2500},\n        //     \"storage\": {1: 0, 2: 0, 3: 0, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1},\n        //     \"tower\": {1: 0, 2: 0, 3: 1, 4: 1, 5: 2, 6: 2, 7: 3, 8: 6},\n        //     \"observer\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1},\n        //     \"powerSpawn\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1},\n        //     \"extractor\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1},\n        //     \"terminal\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1},\n        //     \"lab\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 3, 7: 6, 8: 10},\n        //     \"container\": {0: 5, 1: 5, 2: 5, 3: 5, 4: 5, 5: 5, 6: 5, 7: 5, 8: 5},\n        //     \"nuker\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1},\n        //     \"factory\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1}\n        // }\n\n        // nearWall.forEach((x, y, val)=>{if(val>2&&finalPos==unionFind.find(x*50+y))visual.text(nearWall.get(x,y),x, y+0.5, {color: \"red\",opacity:0.99,font: 7})})\n\n        /**\n         * 这里开始计算布局！\n         * @type {{}}\n         */\n        let structMap = {}\n        _.keys(CONTROLLER_STRUCTURES).forEach(e => structMap[e] = [])\n\n        // 资源点布局\n        structMap[\"link\"] = roomObjectCache.link\n        structMap[\"container\"] = roomObjectCache.container\n        structMap[\"extractor\"] = roomObjectCache.extractor\n        //中心布局\n        structMap[\"storage\"].push([storageX - 1, storageY])\n        structMap[\"terminal\"].push([storageX, storageY + 1])\n        structMap[\"factory\"].push([storageX + 1, storageY])\n        structMap[\"link\"].push([storageX, storageY - 1])\n        for (let i = -1; i <= 1; i++) {\n            for (let j = -1; j <= 1; j++) {\n                structMap[\"road\"].push([storageX + i + j, storageY + i - j]) //仿射变换 [sin,cos,cos,-sin]\n            }\n        }\n        // 这里修改lab布局\n        let labs = [\n            \"☢☢-☢\",\n            \"☢-☢-\",\n            \"-☢-☢\",\n            \"☢-☢☢\"\n            // \"☢☢☢☢☢\",\n            // \"-----\",\n            // \"☢☢☢☢☢\"\n        ]\n        let labChangeDirection = false;\n        if ((storageX - labX) * (storageY - labY) < 0) {\n            labChangeDirection = true\n        }\n\n        let vis = {}\n        for (let i = 0; i < 2; i++) {\n            for (let j = 0; j < 2; j++) {\n                vis[i + \"_\" + j] = 1 // 优先放置中间的label\n                let jj = labChangeDirection ? j : 1 - j;\n                let structs = labs[i + 1].charAt(j + 1)\n                if (structs === '☢')\n                    structMap[\"lab\"].push([labX + i, labY + jj])\n                else\n                    structMap[\"road\"].push([labX + i, labY + jj])\n            }\n        }\n\n        for (let i = -1; i < 3; i++) {\n            for (let j = -1; j < 3; j++) {\n                if (vis[i + \"_\" + j]) continue;\n                let jj = labChangeDirection ? j : 1 - j;\n                let structs = labs[i + 1].charAt(j + 1)\n                if (structs === '☢')\n                    structMap[\"lab\"].push([labX + i, labY + jj])\n                else\n                    structMap[\"road\"].push([labX + i, labY + jj])\n            }\n        }\n\n        walls.forEach(e => structMap[\"rampart\"].push([e.x, e.y]))\n\n        _.keys(CONTROLLER_STRUCTURES).forEach(struct => structMap[struct].forEach(e => roomStructs.set(e[0], e[1], struct)))\n\n        structMap[\"road\"].forEach(e => roomStructs.set(e[0], e[1], 1))\n        //设置权值，bfs联通路径！\n        let setModel = function (xx, yy) {\n            let checkAble = (x, y) => (x >= 0 && y >= 0 && x <= 49 && y <= 49) && roomManor.get(x, y) > 0 && !roomStructs.get(x, y)\n            for (let i = -1; i <= 1; i++) {\n                for (let j = -1; j <= 1; j++) {\n                    let x = xx + i + j\n                    let y = yy + i - j\n                    if (checkAble(x, y)) {\n                        if (i || j) {\n                            // structMap[\"road\"] .push([x,y]) //仿射变换 [sin,cos,cos,-sin]\n                            roomStructs.set(x, y, 1)\n                        } else {\n                            // structMap[\"spawn\"] .push([x,y])\n                            roomStructs.set(x, y, 12)\n                        }\n                    }\n                }\n            }\n            for (let e of [[1, 0], [-1, 0], [0, 1], [0, -1]]) {\n                let x = xx + e[0]\n                let y = yy + e[1]\n                if (checkAble(x, y)) {\n                    // structMap[\"extension\"] .push([x,y])\n                    roomStructs.set(x, y, 8)\n                }\n            }\n        }\n\n        for (let i = 0; i < 50; i += 4) {\n            for (let j = 0; j < 50; j += 4) {\n                let x = storageX % 4 + i\n                let y = storageY % 4 + j\n                setModel(x, y)\n                setModel(x + 2, y + 2)\n\n            }\n        }\n        visited.init()\n        visited.set(storageX, storageY, 1)\n\n        queMin.push(NewNode(1, storageX, storageY))\n        let costRoad = routeDistance //重复使用\n        costRoad.init()\n        queMin.whileNoEmpty(nd => {\n            roomStructs.forNear((x, y, val) => {\n                if (!visited.exec(x, y, 1) && val > 0) {\n                    queMin.push(NewNode(nd.k + val, x, y))\n                }\n            }, nd.x, nd.y)\n            costRoad.set(nd.x, nd.y, nd.k)\n            // visual.text(nd.k,nd.x,nd.y+0.25, {color: \"pink\",opacity:0.99,font: 7})\n        })\n\n        structMap[\"road\"].forEach(e => roomStructs.set(e[0], e[1], \"road\")) //这里把之前的road覆盖上去防止放在之前里road上了\n\n        costRoad.forEach((x, y, val) => {\n            if (!val) return;\n            let minVal = 50;\n            // let finalX = 0;\n            // let finalY = 0;\n            costRoad.forNear((x1, y1, val) => {\n                if (minVal > val && val > 0) {\n                    minVal = val\n                    // finalX = x1\n                    // finalY = y1\n                }\n            }, x, y)\n            // 方案2 没那么密集\n            costRoad.forNear((x1, y1, val) => {\n                if (minVal === val && val > 0) {\n                    // structMap[\"road\"].push([x1,y1])\n                    roomStructs.set(x1, y1, \"road\")\n                }\n            }, x, y)\n            // 方案1 密集\n            // structMap[\"road\"].push([finalX,finalY])\n            // roomStructs.set(finalX,finalY,\"road\")\n        })\n\n        let spawnPos = []\n        let extensionPos = []\n        roomStructs.forEach((x, y, val) => {\n            if (val > 0) {\n                let dist = 100;\n                costRoad.forNear((x, y, val) => {\n                    if (val) dist = Math.min(dist, val)\n                }, x, y)\n                // let dist = Math.sqrt(Math.pow(x-storageX,2)+Math.pow(y-storageY,2))\n                if (val === 12) {// 8 && 12 上面有写，注意！！！\n                    spawnPos.push([x, y, dist])\n                } else {\n                    extensionPos.push([x, y, dist])\n                    // visual.text(dist,x, y+0.25, {color: \"pink\",opacity:0.99,font: 7})\n                }\n            }\n        })\n        let cmpFunc = (a, b) => a[2] === b[2] ? (a[1] === b[1] ? a[0] - b[0] : a[1] - b[1]) : a[2] - b[2];\n        spawnPos = spawnPos.sort(cmpFunc);\n        extensionPos = extensionPos.sort(cmpFunc);\n        let oriStruct = [];\n        let putList = [];\n        [\"spawn\", \"powerSpawn\", \"nuker\", \"tower\", \"observer\"].forEach(struct => {\n            for (let i = 0; i < CONTROLLER_STRUCTURES[struct][8]; i++) {\n                oriStruct.push(struct)\n            }\n        })\n        oriStruct.forEach(struct => {\n            let e = spawnPos.shift()\n            if (!e) e = extensionPos.shift()\n            structMap[struct].push([e[0], e[1]])\n            putList.push([e[0], e[1], struct])\n        })\n        extensionPos.push(...spawnPos)\n        extensionPos = extensionPos.sort(cmpFunc);\n        let extCnt = 60\n        extensionPos.forEach(e => {\n            if (extCnt > 0) {\n                structMap[\"extension\"].push([e[0], e[1]]);\n                putList.push([e[0], e[1], \"extension\"])\n                extCnt -= 1;\n            }\n        })\n\n\n        // 更新roads\n        roomStructs.init()\n        _.keys(CONTROLLER_STRUCTURES).forEach(struct => structMap[struct].forEach(e => roomStructs.set(e[0], e[1], struct)))\n        visited.init()\n        structMap[\"road\"].forEach(e => visited.set(e[0], e[1], 1))\n        /**\n         * 更新最近的roads 但是可能有残缺\n         */\n        putList.forEach(e => {\n            let x = e[0]\n            let y = e[1]\n            let minVal = 50;\n            costRoad.forNear((x1, y1, val) => {\n                if (minVal > val && val > 0) {\n                    minVal = val\n                }\n            }, x, y)\n            // 方案2 没那么密集\n            costRoad.forNear((x1, y1, val) => {\n                if (minVal === val && val > 0) {\n                    // 找到建筑最近的那个road\n                    roomStructs.set(x1, y1, \"road\")\n                }\n            }, x, y)\n        })\n        /**\n         * 再roads的基础上，对rads进行补全，将残缺的连起来\n         */\n        roomStructs.forEach((x, y, val) => {\n            if (val === 'link' || val === 'container') return; // 资源点的不要 放路\n            if (!val instanceof String || val > -1) return; // 附近有建筑 ，并且不是road\n            // visual.text(val,x, y+0.25, {color: \"pink\",opacity:0.99,font: 7})\n            let minVal = 50;\n            costRoad.forNear((x1, y1, val) => {\n                if (minVal > val && val > 0) {\n                    minVal = val\n                }\n            }, x, y)\n            // 方案2 没那么密集\n            costRoad.forNear((x1, y1, val) => {\n                if (minVal === val && val > 0) {\n                    // 找到建筑最近的那个road\n                    if (!visited.exec(x1, y1, 1)) structMap[\"road\"].push([x1, y1])\n                }\n            }, x, y)\n        })\n\n        // 处理塔的位置，让塔尽量靠外\n        let getRange = function (a, b) {\n            return Math.max(Math.abs(a[0] - b[0]), Math.abs(a[1] - b[1]))\n        }\n        let poses = []\n        let types = [\"nuker\", \"tower\", \"observer\"]\n        types.forEach(type => {\n            structMap[type].forEach(e => {\n                let dis = 0\n                structMap[\"rampart\"].forEach(e_ramp => {\n                    dis += getRange(e_ramp, e)\n                })\n                poses.push({pos: e, type, dis})\n            })\n        })\n        poses.sort((a, b) => (a.dis - b.dis))\n\n        for (let i = 0; i < 6; i++) {\n            if (poses[i].type === \"tower\") continue;\n            for (let j = 6; j < poses.length; j++) {\n                if (poses[j].type !== \"tower\") continue;\n                poses[j].type = poses[i].type\n                poses[i].type = \"tower\"\n            }\n        }\n        types.forEach(type => {\n            structMap[type] = []\n        })\n        poses.forEach(pos => {\n            structMap[pos.type].push(pos.pos)\n        })\n\n        //#region 新的连接外矿方式\n\n        let costs = new PathFinder.CostMatrix;\n        let terrain = new Room.Terrain(roomName);\n        for (let i = 0; i < 50; i++) {\n            for (let j = 0; j < 50; j++) {\n                let te = terrain.get(i, j)\n                costs.set(i, j, te === TERRAIN_MASK_WALL ? 255 : (te === TERRAIN_MASK_SWAMP ? 4 : 2))\n            }\n        }\n        for (let struct of OBSTACLE_OBJECT_TYPES) {\n            if (structMap[struct]) {\n                structMap[struct].forEach(e => {\n                    costs.set(e[0], e[1], 255)\n                })\n            }\n        }\n        structMap[\"road\"].forEach(e => {\n            costs.set(e[0], e[1], 1)\n        })\n        for (let i = 0; i < 50; i++) {\n            for (let j = 0; j < 50; j++) {\n                // new RoomVisual(roomName).text(costs.get(i,j),new RoomPosition(i,j,roomName))\n            }\n        }\n        structMap[\"container\"].forEach(e => {\n            let ret = PathFinder.search(\n                new RoomPosition(centerX, centerY, roomName),\n                {pos: new RoomPosition(e[0], e[1], roomName), range: 1},\n                {\n                    roomCallback: () => {\n                        return costs\n                    },\n                    maxRooms: 1\n                }\n            )\n            ret.path.forEach(pos => {\n                if (costs.get(pos.x, pos.y) !== 1) {\n                    structMap['road'].push([pos.x, pos.y])\n                    costs.set(pos.x, pos.y, 1)\n                }\n            })\n\n        })\n        //#endregion\n\n        //#region 旧的连接外矿道路\n\n        // // 连接外矿的全部道路\n        // _.keys(CONTROLLER_STRUCTURES).forEach(struct=>structMap[struct].forEach(e=>roomStructs.set(e[0],e[1],struct)))\n\n        // costRoad.forEach((x,y,val)=>costRoad.set(x,y,100))//初始化100\n        // visited.init()\n        // queMin.push(NewNode(0,storageX,storageY))//以 storage为中心\n        // visited.exec(storageX,storageY,1)\n        // queMin.whileNoEmpty(nd=>{\n        //     roomStructs.forNear((x,y,val)=>{\n        //         let roadCost = roomWalkable.get(x,y);\n        //         if(!visited.exec(x,y,1)&&(!val||val=='road'||val=='rampart')&&roadCost){\n        //             queMin.push(NewNode(nd.k+(val=='road'?0:roadCost==2?4:2),x,y))\n        //         }\n        //     },nd.x,nd.y)\n        //     costRoad.set(nd.x,nd.y,nd.k)\n        //     // visual.text(costRoad.get(nd.x,nd.y),nd.x,nd.y+0.25, {color: \"pink\",opacity:0.99,font: 7})\n        // })\n\n        // // 将dp的位置进行递归回去\n        // let border = visited //边界不能放路\n        // border.init()\n        // visited.forBorder((x,y,val)=>{visited.set(x,y,1)})\n        // structMap[\"container\"].forEach(e=>{\n        //     let dfsBack = function (x,y){\n        //         let minVal =500;\n        //         let finalX = 0;\n        //         let finalY = 0;\n        //         costRoad.forNear((x,y,val)=>{\n        //             let struct = roomStructs.get(x,y)\n        //             if(minVal>val&&!visited.get(x,y)&&val>=0&&roomWalkable.get(x,y)&&(!struct||struct=='road'||struct=='rampart')) {\n        //                 minVal = val\n        //                 finalX = x\n        //                 finalY = y\n        //             }\n        //         },x,y)\n        //         if(minVal){\n        //             if(\"road\"!=roomStructs.exec(finalX,finalY,\"road\")){\n        //                 structMap[\"road\"].push([finalX,finalY]);\n        //                 dfsBack(finalX,finalY)\n        //             }\n        //         }\n        //         // visual.text(minVal,finalX,finalY+0.25, {color: \"pink\",opacity:0.99,font: 7})\n        //     }\n        //     dfsBack(e[0],e[1])\n        //     structMap[\"road\"].forEach(e=>costRoad.set(e[0],e[1],0))\n        // })\n\n        //#endregion\n\n        // 可视化部分\n        // allCacheMap[finalPos].forEach(t=>{\n        //     visual.circle(t.x, t.y, {fill: \"#33ff00\", radius: 0.5 ,opacity : 0.03})\n        // })\n        // putAbleList.forEach(t=>{\n        //     visual.circle(t.x, t.y, {fill: \"#b300ff\", radius: 0.5 ,opacity : 0.1})\n        // })\n\n        // roomStructs.init()\n        // _.keys(CONTROLLER_STRUCTURES).forEach(struct=>structMap[struct].forEach(e=>roomStructs.set(e[0],e[1],struct)))\n\n\n        // let t = Game.cpu.getUsed()\n        // console.log(Game.cpu.getUsed()-t)\n        pro.dismiss()\n\n        // HelperVisual.showRoomStructures(roomName,structMap)\n\n        // clog(roomName,structMap[\"extension\"].length,structMap[\"spawn\"].length,wallCnt,innerPutAbleList.length)\n        return {\n            roomName: roomName,\n            // storagePos:{storageX,storageY},\n            // labPos:{labX,labY},\n            structMap: structMap\n        }\n\n    },\n\n};\n\nglobal.ManagerPlanner = pro;\nlet roomStructsData = undefined //放全局变量\nlet globalT = true\nmodule.exports = {\n    run() {\n        console.log(\"run 63 planner\")\n\n        let p = Game.flags.Flag1; // 触发器\n        let pa = Game.flags.pa;\n        let pb = Game.flags.pb;\n        let pc = Game.flags.pc;\n        let pm = Game.flags.pm;\n        if (p && !globalT) {\n            roomStructsData = ManagerPlanner.computeManor(p.pos.roomName, [pc, pm, pa, pb])\n            //Game.flags.Flag1.remove()\n        }\n        if (roomStructsData) {\n            //这个有点消耗cpu 不看的时候记得关\n            //HelperVisual.showRoomStructures(roomStructsData.roomName,roomStructsData.structMap)\n        }\n        //RawMemory.set(JSON.stringify(roomStructsData))\n        //console.log(JSON.stringify(roomStructsData));\n    }\n}\n","// Any modules that you use that modify the game's prototypes should be require'd\n// before you require the profiler.\nimport profiler from './3rd/screeps-profiler'\nimport {errorMapper} from './modules/errorMapper'\nimport {cleanMemory, sayHello, visualizeTerrain} from './modules/utils'\nimport {CalculateLayout} from './3rd/JS_Layout/build_Layout_v1.1'\nimport autoPlan from './3rd/JS_Layout/63_good'\n\nfunction funcCalculateLayout() {\n    let center = Game.flags.center; // 房间中心的位置\n    let pa = Game.flags.pa;\n    let pb = Game.flags.pb;\n    let pc = Game.flags.pc;\n    let pm = Game.flags.pm;\n    if (center) {\n        let points = [pc.pos, pm.pos, pa.pos]\n        if (pb) points.push(pb.pos)\n        CalculateLayout(center.pos, points)\n    }\n}\nfunction funcShowInfo() {\n    //console.log(`当前 CPU 上限: ${Game.cpu.limit} ms/tick`);\n    // 正确获取地形对象（注意房间名称格式）\n    //visualizeTerrain(\"W8N3\");\n    sayHello()\n}\n\n// This line monkey patches the global prototypes.\nprofiler.enable();\nmodule.exports.loop = errorMapper(() => {\n    profiler.wrap(function () {\n        const startCpu = Game.cpu.getUsed(); // 记录开始时间\n        //console.log(`startCpu : ${startCpu} ms`);\n        autoPlan.run()\n        funcCalculateLayout()\n        const endCpu = Game.cpu.getUsed(); // 记录结束时间\n        //console.log(`endCpu : ${endCpu} ms`);\n        console.log(`CPU 消耗: ${(endCpu - startCpu).toFixed(2)} ms`);\n        funcShowInfo()\n    });\n})\n"],"names":["global","base64","require$$0","util","ArraySet","MappingList","base64VLQ","require$$1","require$$2","require$$3","SourceMapGenerator","quickSort","require$$4","SourceMapConsumer","cache","RoomArray","structuresShape","structuresColor","_","CalculateLayout","profiler","autoPlan"],"mappings":"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"}